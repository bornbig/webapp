[{"/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/reportWebVitals.js":"1","/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/index.js":"2","/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/helpers.js":"3","/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/reducers/commonReducer.js":"4","/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/reducers/root.js":"5","/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/components/pages/Home.jsx":"6","/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/App.js":"7","/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/routes.js":"8","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/index.js":"9","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/App.js":"10","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/root.js":"11","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/helpers.js":"12","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/routes.js":"13","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/commonReducer.js":"14","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/categoryReducer.js":"15","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/jobsReducer.js":"16","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/constants.js":"17","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/ipfs.js":"18","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/JobPost.jsx":"19","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/JobEdit.jsx":"20","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/JobDescription.jsx":"21","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/Home.jsx":"22","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/commonAction.js":"23","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/categoryActions.js":"24","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/ChatPage.jsx":"25","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/categoryListReducer.js":"26","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/JobReducers.js":"27","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/jobListReducer.js":"28","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/categoryListAction.js":"29","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/NotFound.jsx":"30","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/OrderList.jsx":"31","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/jobListActions.js":"32","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/config.js":"33","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/controllers/Chat.js":"34","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/jobActions.js":"35","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/config/categoryList.js":"36","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/config/abi/categoryContract.js":"37","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/config/abi/offerContract.js":"38","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/orderActions.js":"39","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/config/abi/orderContract.js":"40","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/JobList.jsx":"41","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/CategoryList.jsx":"42","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/CustomerJobList.jsx":"43","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/CardList.jsx":"44","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/common/JobCard.jsx":"45","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/common/Footer.jsx":"46","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/common/Header.jsx":"47","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/OrderItemList.jsx":"48","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/UserPriceDetail.jsx":"49","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/modals/NewCategoryModal.jsx":"50"},{"size":362,"mtime":1609137817477,"results":"51","hashOfConfig":"52"},{"size":714,"mtime":1609138762706,"results":"53","hashOfConfig":"54"},{"size":1695,"mtime":1609138207926,"results":"55","hashOfConfig":"54"},{"size":183,"mtime":1609138667465,"results":"56","hashOfConfig":"54"},{"size":183,"mtime":1609138703853,"results":"57","hashOfConfig":"54"},{"size":318,"mtime":1609138748556,"results":"58","hashOfConfig":"54"},{"size":571,"mtime":1609138288245,"results":"59","hashOfConfig":"54"},{"size":149,"mtime":1609138220648,"results":"60","hashOfConfig":"54"},{"size":714,"mtime":1613449603052,"results":"61","hashOfConfig":"62"},{"size":1596,"mtime":1621474805271,"results":"63","hashOfConfig":"62"},{"size":557,"mtime":1618157680794,"results":"64","hashOfConfig":"62"},{"size":1949,"mtime":1613449603052,"results":"65","hashOfConfig":"62"},{"size":1671,"mtime":1620447076447,"results":"66","hashOfConfig":"62"},{"size":1748,"mtime":1621474788453,"results":"67","hashOfConfig":"62"},{"size":890,"mtime":1619262031741,"results":"68","hashOfConfig":"62"},{"size":1654,"mtime":1618157680793,"results":"69","hashOfConfig":"62"},{"size":2931,"mtime":1620024433303,"results":"70","hashOfConfig":"62"},{"size":137,"mtime":1613449603052,"results":"71","hashOfConfig":"62"},{"size":17828,"mtime":1620478819786,"results":"72","hashOfConfig":"62"},{"size":19592,"mtime":1620478819785,"results":"73","hashOfConfig":"62"},{"size":7303,"mtime":1621443048200,"results":"74","hashOfConfig":"62"},{"size":3025,"mtime":1621479482473,"results":"75","hashOfConfig":"62"},{"size":3356,"mtime":1621474992152,"results":"76","hashOfConfig":"62"},{"size":1905,"mtime":1620469646653,"results":"77","hashOfConfig":"62"},{"size":7630,"mtime":1620971350407,"results":"78","hashOfConfig":"62"},{"size":774,"mtime":1618157680792,"results":"79","hashOfConfig":"62"},{"size":2617,"mtime":1620478819787,"results":"80","hashOfConfig":"62"},{"size":1966,"mtime":1620005029382,"results":"81","hashOfConfig":"62"},{"size":537,"mtime":1621307734241,"results":"82","hashOfConfig":"62"},{"size":777,"mtime":1620446262793,"results":"83","hashOfConfig":"62"},{"size":5909,"mtime":1620469997885,"results":"84","hashOfConfig":"62"},{"size":2901,"mtime":1620044655165,"results":"85","hashOfConfig":"62"},{"size":380,"mtime":1621331403303,"results":"86","hashOfConfig":"62"},{"size":3602,"mtime":1620819647726,"results":"87","hashOfConfig":"62"},{"size":3590,"mtime":1620443479295,"results":"88","hashOfConfig":"62"},{"size":365,"mtime":1621331647311,"results":"89","hashOfConfig":"62"},{"size":4604,"mtime":1620304217267,"results":"90","hashOfConfig":"62"},{"size":4760,"mtime":1620304244180,"results":"91","hashOfConfig":"62"},{"size":2995,"mtime":1620971350404,"results":"92","hashOfConfig":"62"},{"size":4792,"mtime":1620304282750,"results":"93","hashOfConfig":"62"},{"size":4182,"mtime":1620524749195,"results":"94","hashOfConfig":"62"},{"size":2012,"mtime":1621522278179,"results":"95","hashOfConfig":"62"},{"size":3528,"mtime":1620713858365,"results":"96","hashOfConfig":"62"},{"size":2006,"mtime":1621479564703,"results":"97","hashOfConfig":"62"},{"size":2413,"mtime":1620525220999,"results":"98","hashOfConfig":"62"},{"size":4747,"mtime":1621519800266,"results":"99","hashOfConfig":"62"},{"size":5776,"mtime":1621521257154,"results":"100","hashOfConfig":"62"},{"size":5625,"mtime":1621479403049,"results":"101","hashOfConfig":"62"},{"size":2073,"mtime":1621443719264,"results":"102","hashOfConfig":"62"},{"size":1591,"mtime":1620454022105,"results":"103","hashOfConfig":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ujeblc",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"135jfh2",{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1qf80vs",{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"122"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"122"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"122"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"122"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/reportWebVitals.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/index.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/helpers.js",["233","234","235","236","237","238"],"/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/reducers/commonReducer.js",["239"],"/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/reducers/root.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/components/pages/Home.jsx",[],"/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/App.js",["240"],"/Users/coolatmusic/Documents/Practice/smart-contract/webapp/src/routes.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/index.js",[],["241","242"],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/App.js",["243","244"],"import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch\n} from \"react-router-dom\";\nimport { routes } from \"./routes\";\nimport { RouteWithSubRoutes } from \"./helpers\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './styles/index.scss';\nimport { connect } from \"react-redux\";\nimport { connectIfAuthorized } from \"./actions/commonAction\";\nimport Header from \"./components/common/Header\";\nimport Footer from \"./components/common/Footer\";\nimport { Spinner } from \"react-bootstrap\";\n\nclass App extends Component {\n\n  async componentDidMount() {\n    await this.props.connectIfAuthorized();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.props.web3 ?\n        <>\n        {window.location.pathname != \"/\" &&\n          <Header />\n        }\n          <Switch>\n              {routes.map((route, i) => (\n                <RouteWithSubRoutes key={i} {...route} />\n              ))}\n          </Switch>\n         <Footer />\n         </>\n         : <div className=\"text-center\">\n           oooo\n           <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n           </div>}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\nconst { web3,  loading, error } = state.common;\n  return {\n    web3,\n    loading,\n    error,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectIfAuthorized: () => dispatch(connectIfAuthorized()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/root.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/helpers.js",["245","246","247","248","249","250"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nexport function RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={props => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nexport function setCookie(cname, cvalue, exdays) {\n  var d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  var expires = \"expires=\" + d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\n\nexport function setJsonCookie(cname, cvalue, exdays) {\n  setCookie(cname, JSON.stringify(cvalue), exdays);\n}\n\nexport function getCookie(cname) {\n  var name = cname + \"=\";\n  var ca = document.cookie.split(\";\");\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport function getJsonCookie(cname) {\n  return JSON.parse(getCookie(cname));\n}\n\nexport function checkCookie(cname) {\n  var user = getCookie(cname);\n  if (user != \"\") {\n    return true;\n  }\n\n  return false;\n}\n\nexport const slugToText = slug => {\n  var words = slug.split(\"_\");\n\n  for (var i = 0; i < words.length; i++) {\n    var word = words[i];\n    words[i] = word.charAt(0).toUpperCase() + word.slice(1);\n  }\n\n  return words.join(\" \");\n};\n\nexport const getUrlVars = () => {\n  var vars = {};\n  var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(\n    m,\n    key,\n    value\n  ) {\n    vars[key] = value;\n  });\n  return vars;\n};\n\nexport function sortJSONData(prop){   \n    return function(a, b) {    \n        if (a[prop] < b[prop]) {    \n            return 1;    \n        } else if (a[prop] > b[prop]) {    \n            return -1;    \n        }    \n        return 0;    \n    }    \n}\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/routes.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/commonReducer.js",["251","252"],"import {FETCH_PARENT_CATEGORIES, FETCH_CUSTOMER_DATA ,\n WALLET_CONNECT_REQUEST, WALLET_CONNECT_SUCCESS, WALLET_CONNECT_ERROR,\n ACCOUNT_CONNECTION} from '../constants';\n\nconst initialState = {\n  web3: null,\n  contract: null,\n  accountConnection: null,\n  account: null,\n  loading: false,\n  error: false\n};\n\nexport default function(state = initialState, action) {\n  \n  switch (action.type) {\n    case FETCH_PARENT_CATEGORIES:\n      return {\n        ...state,\n        \"parentCategories\":\n          Object.keys(action.payload).map((value,key) => {\n              return {\n                \"name\":value,\n                \"id\":action.payload[value].id\n              }\n          })\n      }\n    case FETCH_CUSTOMER_DATA:\n      return{\n        ...state,\n        \"customerData\":action.customerData.filter((data) => {\n          return data.id === action.customerId\n        })[0],\n        \"jobData\":action.jobsData.filter((data) => {\n          return data.customerId == action.customerId\n        })\n    }\n    case WALLET_CONNECT_REQUEST:\n      return {\n        ...state,\n        web3: null,\n        contract: null,\n        account: null,\n        loading: true\n      }\n    case WALLET_CONNECT_SUCCESS:\n      return {\n        ...state,\n        web3: action.web3,\n        contract: action.contract,\n        loading: false\n      }\n    case WALLET_CONNECT_ERROR:\n      return {\n        ...state,\n        web3: null,\n        contract: null,\n        account: null,\n        loading: false,\n        error: true\n      } \n    case ACCOUNT_CONNECTION:\n      return {\n        ...state,\n        accountConnection: action.accountConnection,\n        contract: action.contract,\n        account: action.account,\n        loading: false\n      }\n    default:\n      return state;\n  }\n}\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/categoryReducer.js",["253"],"import {FETCH_CATEGORIES , CATEGORY_CU_REQUEST , CATEGORY_CU_SUCCESS , CATEGORY_CU_ERROR} from '../constants';\n\nconst initialState = {\n  loadingCat: false,\n  errorCat: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return {\n        ...state,\n        categoryItems:action.payload[Object.keys(action.payload).filter(value=>{\n            return action.payload[value].id === action.categoryId\n        })]\n    }\n    case CATEGORY_CU_REQUEST: \n      return {\n          ...state,\n          errorCat: false,\n          loadingCat: true\n      }\n    case CATEGORY_CU_SUCCESS:\n      return {\n        ...state,\n        errorCat: false,\n        loadingCat: false\n      }\n    case CATEGORY_CU_ERROR:\n      return {\n        ...state,\n        errorCat:true,\n        laodingCat:false\n      } \n    default:\n      return state;\n  }\n}","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/jobsReducer.js",["254","255","256"],"import {FETCH_FEATURED_JOBS , FETCH_HIGHRATED_JOBS , FETCH_NEW_JOBS , FETCH_JOB_DATA, FETCH_HASH_JOB_DATA, FETCH_JOBS_BY_CATEGORY , FETCH_ACTIVE_BUYER_JOBS} from '../constants';\nimport {sortJSONData} from '../helpers';\nimport ipfs from '../ipfs';\n\nconst initialState = {\n  loading: false,\n  error: false,\n  ratedData:[],\n  featuredData:[],\n  newData:[],\n  jobDescription:[]\n\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_FEATURED_JOBS:\n      return {\n        ...state,\n        featuredData:action.payload.filter(value=>{\n            return value.isFeatured === true\n        })\n    }\n    case FETCH_JOBS_BY_CATEGORY:\n      return {\n        ...state,\n        categoryJob:action.payload.filter(value=>{\n            return value.categoryId === action.categoryId\n        })\n    }\n    case FETCH_HIGHRATED_JOBS:\n      return {\n        ...state,\n        ratedData:action.payload.sort(sortJSONData('budget'))\n    }\n    case FETCH_NEW_JOBS:\n      return {\n        ...state,\n        newData:action.payload.filter(value=>{\n          return value.isHash === true\n      })\n    }\n    case FETCH_JOB_DATA:\n      return {\n        ...state,\n        jobDescription:action.payload.filter(value=>{\n            return value.id === action.jobId\n        })\n    }\n    case FETCH_HASH_JOB_DATA:\n      return{\n        ...state,\n        hashedData:action.payload,\n        isHash:true\n      }\n    case FETCH_ACTIVE_BUYER_JOBS:\n        return{\n          ...state,\n          activeJobs:action.payload.filter(value=>{\n              return value.isActive == action.flag\n          })\n        }\n    default:\n      return state;\n  }\n}\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/constants.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/ipfs.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/JobPost.jsx",["257","258","259","260","261"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Col, Form, Button, Container } from \"react-bootstrap\";\nimport {\n  connectIfAuthorized,\n  connectWallet,\n} from \"../../actions/commonAction\";\nimport {\n  createNewCategory,\n  fetchCategories,\n} from \"../../actions/categoryActions\";\nimport { Helmet } from \"react-helmet\";\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport \"@pathofdev/react-tag-input/build/index.css\";\nimport ipfs from \"../../ipfs\";\nimport Web3 from \"web3\";\nimport { postJob } from \"../../actions/jobActions\";\nimport { getCategoriesList } from \"../../actions/categoryListAction\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { NewCategoryModal } from \"../modals/NewCategoryModal\";\n\nclass JobPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validated: false,\n      isParentSelected: false,\n      title: \"\",\n      duration: null,\n      parentCategory: \"\",\n      category: \"\",\n      description: \"\",\n      tags: [],\n      features: [],\n      price: null,\n      successful: false,\n      imageArray: [],\n      buffer: \"\",\n      imageHash: [],\n      dataHash: \"\",\n      previewImage: [],\n      offerContract: \"\",\n      package: \"\",\n      modalShow: false,\n      newcat: \"\",\n      catFormValidated: false,\n      loadingCat: false,\n      errorCat: false,\n      loading:false\n    };\n    this.captureFile = this.captureFile.bind(this);\n    this.uploadFormData = this.uploadFormData.bind(this);\n    this.getFileData = this.getFileData.bind(this);\n    this.loadWeb3 = this.loadWeb3.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.handleNewCategorySubmit = this.handleNewCategorySubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    // await this.props.connectWallet();\n    await this.props.getCategoriesList(this.props.contract, this.props.account);\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n  }\n\n  showModal(flag) {\n    this.setState({ modalShow: flag, catFormValidated: false });\n  }\n\n  uploadFormData() {\n    const uploadData = {\n      title: this.state.title,\n      duration: Number(this.state.duration),\n      parentCategory: this.state.parentCategory,\n      category: this.state.category,\n      description: this.state.description,\n      tags: this.state.tags,\n      imageHash: this.state.imageHash,\n      price: Number(this.state.price),\n      package: this.state.package,\n      features: this.state.features,\n    };\n    ipfs.files.add(\n      Buffer.from(JSON.stringify(uploadData)),\n      async (error, result) => {\n        if (error) {\n          return;\n        }\n        await this.props.postJob(\n          this.props.accountConnection,\n          result[0].hash,\n          this.state.imageHash,\n          this.props.account,\n          this.props.account,\n          this.state.offerContract,\n          uploadData.price,\n          uploadData.duration\n        );\n        this.setState({ successful: true , loading:false });\n      }\n    );\n  }\n\n  getFileData() {\n    ipfs.files.get(this.state.dataHash, (error, result) => {\n      // console.log('Data hash' , JSON.parse(result[0].content.toString()));\n    });\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    event.preventDefault();\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      this.setState({loading:true});\n      let requestToMake = [];\n      for(let i= 0; i < this.state.imageArray.length ; i++){\n          let api =  new Promise((resolve,reject) => {\n                ipfs.files.add(this.state.imageArray[i], (error, result) => {\n                if (error) {\n                  reject(error)\n                }\n                this.setState({\n                  imageHash: [...this.state.imageHash, result[0].hash],\n                });\n                resolve('success');\n            });\n          });\n          requestToMake.push(api);\n      }\n      Promise.all(requestToMake).then((results) => {  \n        this.uploadFormData();\n      },(error) => {\n        this.setState({loading:false});\n      });\n    }\n    this.setState({ validated: true });\n  }\n\n  onSelectedOptionsChange(event) {\n    const value = event.currentTarget.value;\n    this.myChangeHandler(event);\n    let filteredCategory = this.props.categoryList.filter((cat) => {\n      if (cat.name === value) {\n        return cat;\n      }\n    });\n    this.setState({ offerContract: filteredCategory[0].offer_contract });\n    this.setState({ isParentSelected: true });\n  }\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    if (nam == \"duration\") {\n      if (parseInt(val) !== 0) {\n        this.setState({ [nam]: val });\n      }\n    } else {\n      this.setState({ [nam]: val });\n    }\n  };\n\n  captureFile(event) {\n    for (let i = 0; i < event.target.files.length; i++) {\n      const file = event.target.files[i];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadend = () => {\n        this.setState({\n          imageArray: [...this.state.imageArray, Buffer(reader.result)],\n        });\n        this.setState({\n          previewImage: [...this.state.previewImage, URL.createObjectURL(file)],\n        });\n      };\n    }\n  }\n\n  handleTags = (newTags, type) => {\n    if (type == \"skills\") {\n      this.setState({ tags: newTags });\n    } else {\n      this.setState({ features: newTags });\n    }\n  };\n\n  async handleNewCategorySubmit(event) {\n    const form = event.currentTarget;\n    event.preventDefault();\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      // this.setState({catFormValidated:true});\n      await this.props.createNewCategory(\n        this.state.newcat,\n        this.props.account,\n        this.props.contract\n      );\n      this.showModal(false);\n    }\n  }\n\n  render() {\n    return (\n      <>\n       <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Post a Job</title>\n        </Helmet>\n      <Container className=\"body-padding\">\n        <div style={{ maxWidth: \"640px\", margin: \"auto\" }}>\n          {\n            <>\n              {!this.state.successful ? (\n                <>\n                  <NewCategoryModal\n                    show={this.state.modalShow}\n                    onHide={() => this.showModal(false)}\n                    myChangeHandler={this.myChangeHandler}\n                    validation={this.state.catFormValidated}\n                    handleSubmit={this.handleNewCategorySubmit}\n                  ></NewCategoryModal>\n                  <Form\n                    noValidate\n                    validated={this.state.validated}\n                    onSubmit={this.handleSubmit.bind(this)}\n                  >\n                    <Form.Row>\n                      <Form.Group\n                        as={Col}\n                        lg=\"12\"\n                        controlId=\"validationCustom01\"\n                      >\n                        <Form.Label>Gig Title</Form.Label>\n                        <Form.Control\n                          required\n                          type=\"text\"\n                          name=\"title\"\n                          placeholder=\"A Nice Title\"\n                          onChange={this.myChangeHandler}\n                          disabled={this.state.loading}\n                          autoComplete=\"off\"\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a valid title.\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                      <Form.Group\n                        as={Col}\n                        md=\"6\"\n                        controlId=\"validationCustom02\"\n                      >\n                        <Form.Label>Duration (In Days):</Form.Label>\n                        <Form.Control\n                          required\n                          type=\"number\"\n                          name=\"duration\"\n                          placeholder=\"Duration\"\n                          disabled={this.state.loading}\n                          value={this.state.duration}\n                          onChange={this.myChangeHandler}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a valid duration.\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                      <Form.Group\n                        as={Col}\n                        md=\"6\"\n                        controlId=\"validationCustom04\"\n                      >\n                        <Form.Label>Price (In Dai):</Form.Label>\n                        <Form.Control\n                          required\n                          type=\"number\"\n                          name=\"price\"\n                          disabled={this.state.loading}\n                          placeholder=\"Price\"\n                          value={this.state.price}\n                          onChange={this.myChangeHandler}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a valid price.\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group\n                        as={Col}\n                        md=\"8\"\n                        controlId=\"validationCustom03\"\n                      >\n                        <Form.Label>\n                          <span>Select Parent Category</span>\n                        </Form.Label>\n                        <Form.Control\n                          required\n                          as=\"select\"\n                          size=\"sm\"\n                          name=\"parentCategory\"\n                          disabled={this.state.loading}\n                          defaultValue=\"{''}\"\n                          custom\n                          onChange={this.onSelectedOptionsChange.bind(this)}\n                        >\n                          <option value={\"\"}>Choose...</option>\n                          {this.props.categoryList &&\n                            this.props.categoryList.map((parent) => {\n                              return (\n                                <option\n                                  key={parent.name}\n                                  value={parent.name}\n                                  contract={parent.offer}\n                                >\n                                  {parent.name}\n                                </option>\n                              );\n                            })}\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group\n                        as={Col}\n                        md=\"4\"\n                        controlId=\"validationCustom03\"\n                      >\n                        <Button\n                          className=\"new-category-button\"\n                          onClick={() => this.showModal(true)}\n                          variant=\"primary\"\n                          size=\"sm\"\n                          block\n                          disabled={this.state.loading}\n                        >\n                          {this.state.loading ? \"Loading…\" : \"New Category\"}\n                        </Button>\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group\n                        as={Col}\n                        md=\"12\"\n                        controlId=\"validationCustom05\"\n                      >\n                        <Form.Label>Skills</Form.Label>\n                        <ReactTagInput\n                          tags={this.state.tags}\n                          placeholder=\"Type and press enter\"\n                          maxTags={10}\n                          editable={true}\n                          readOnly={this.state.loading}\n                          removeOnBackspace={true}\n                          onChange={(newTags) =>\n                            this.handleTags(newTags, \"skills\")\n                          }\n                        />\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Group\n                      controlId=\"validationCustom08\"\n                      className=\"image-selector\"\n                    >\n                      <h6 cla>Selected Images:</h6>\n                      {this.state.previewImage &&\n                        this.state.previewImage.map((preview, i) => {\n                          return (\n                            <div class=\"edit-image\" key={i}>\n                              <img src={preview} alt=\"\" />\n                            </div>\n                          );\n                        })}\n                    </Form.Group>\n                    <Form.Group controlId=\"validationCustom06\">\n                      <input\n                        type=\"file\"\n                        disabled={this.state.loading}\n                        multiple\n                        onChange={this.captureFile}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId=\"validationCustom07\">\n                      <Form.Label>Description</Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        name=\"description\"\n                        rows={3}\n                        disabled={this.state.loading}\n                        onChange={this.myChangeHandler}\n                        required\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Description field is required.\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group controlId=\"validationCustom09\">\n                      <Form.Label>Package Content</Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        name=\"package\"\n                        rows={3}\n                        disabled={this.state.loading}\n                        onChange={this.myChangeHandler}\n                        required\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Package field is required.\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group controlId=\"validationCustom10\">\n                      <Form.Label>Features</Form.Label>\n                      <ReactTagInput\n                        tags={this.state.features}\n                        placeholder=\"Type and press enter\"\n                        maxTags={15}\n                        editable={true}\n                        readOnly={false}\n                        readOnly={this.state.loading}\n                        removeOnBackspace={true}\n                        onChange={(newTags) =>\n                          this.handleTags(newTags, \"features\")\n                        }\n                      />\n                    </Form.Group>\n                    <Button\n                      type=\"submit\"\n                      disabled={this.state.loading}\n                      className=\"submit btn btn-block btn-large\"\n                    >\n                      {this.state.loading ? \"Loading…\" : \"Submit\"}\n                    </Button>\n                  </Form>\n                </>\n              ) : !this.props.error ? (\n                <div>\n                  <p className=\"text-center\">\n                    You're job has been posted successfully\n                  </p>\n                </div>\n              ) : (\n                <div>\n                  <p className=\"text-center\">Error posting the job</p>\n                </div>\n              )}\n            </>\n            // (\n            //   <Spinner animation=\"border\" role=\"status\">\n            //     <span className=\"sr-only\">Loading...</span>\n            //   </Spinner>\n            // )\n          }\n        </div>\n      </Container>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { contract, account, web3, accountConnection } = state.common;\n  const { id, category_name, loadingCat, errorCat } = state.category;\n  const { categoryList } = state.categoryList;\n  const { loading, error } = state.jobReducer;\n  return {\n    parentCategories: state.common.parentCategories,\n    categories: state.category.categoryItems,\n    contract,\n    account,\n    accountConnection,\n    id,\n    category_name,\n    loading,\n    error,\n    categoryList,\n    web3,\n    loadingCat,\n    errorCat,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchCategories: (id) => dispatch(fetchCategories(id)),\n    postJob: (\n      contract,\n      hash,\n      thumbnail,\n      provider,\n      account,\n      offerContract,\n      price,\n      duration\n    ) =>\n      dispatch(\n        postJob(\n          contract,\n          hash,\n          thumbnail,\n          provider,\n          account,\n          offerContract,\n          price,\n          duration\n        )\n      ),\n    createNewCategory: (name, addr, contract) =>\n      dispatch(createNewCategory(name, addr, contract)),\n    getCategoriesList: (contract, account) =>\n      dispatch(getCategoriesList(contract, account)),\n    connectIfAuthorized: () => dispatch(connectIfAuthorized()),\n    connectWallet: () => dispatch(connectWallet()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobPost);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/JobEdit.jsx",["262","263"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Col, Form, Button, Container } from \"react-bootstrap\";\nimport { fetchCategories } from \"../../actions/categoryActions\";\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport \"@pathofdev/react-tag-input/build/index.css\";\nimport ipfs from \"../../ipfs\";\nimport { withRouter } from \"react-router-dom\";\nimport { fetchData, createNewCategory } from \"../../actions/categoryActions\";\nimport { updateJob } from \"../../actions/jobActions\";\nimport { getJobDetail } from \"../../actions/jobActions\";\nimport { getCategoriesList } from \"../../actions/categoryListAction\";\nimport { connectIfAuthorized } from \"../../actions/commonAction\";\nimport { NewCategoryModal } from \"../modals/NewCategoryModal\";\nimport { Helmet } from \"react-helmet\";\n\nclass JobEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validated: false,\n      isParentSelected: false,\n      title: \"\",\n      duration: 0,\n      parentCategory: \"\",\n      category: \"\",\n      description: \"\",\n      tags: [],\n      successful: false,\n      buffer: \"\",\n      imageHash: \"\",\n      dataHash: \"\",\n      offerContract: \"\",\n      price: 0,\n      jobId: 0,\n      modalShow: false,\n      newcat: \"\",\n      catFormValidated: false,\n      imageArray:[],\n      previewImage: [],\n      imageHashBegin:[]\n    };\n    this.captureFile = this.captureFile.bind(this);\n    this.uploadFormData = this.uploadFormData.bind(this);\n    this.getFileData = this.getFileData.bind(this);\n    this.handleNewCategorySubmit = this.handleNewCategorySubmit.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n\n  async componentDidMount() {\n    // await this.props.connectIfAuthorized();\n    await this.props.getCategoriesList(this.props.contract, this.props.account);\n    const jobId = this.props.match.params.jobId;\n    const offerContract = this.props.match.params.offerContract;\n    this.setState({ offerContract: offerContract, jobId: Number(jobId) });\n    await this.props.getJobDetail(this.props.web3, jobId, offerContract);\n    let jobData = await fetchData(this.props.detailData.ipfs_hash);\n    this.setState({\n      hashedData: jobData,\n      title: jobData.title,\n      description: jobData.description,\n      duration: jobData.duration,\n      parentCategory: jobData.parentCategory,\n      imageHashBegin: jobData.imageHash,\n      tags: jobData.tags,\n      price: jobData.price,\n      package: jobData.package,\n      features: jobData.features,\n    });\n  }\n\n  async uploadFormData(imageHashV) {\n    const uploadData = {\n      title: this.state.title,\n      duration: Number(this.state.duration),\n      parentCategory: this.state.parentCategory,\n      description: this.state.description,\n      tags: this.state.tags,\n      imageHash: [...this.state.imageHash , ...this.state.imageHashBegin],\n      price: Number(this.state.price),\n      package: this.state.package,\n      features: this.state.features,\n    };\n    ipfs.files.add(\n      Buffer.from(JSON.stringify(uploadData)),\n      async (error, result) => {\n        if (error) {\n          return;\n        }\n        this.setState({ dataHash: result[0].hash });\n        await this.props.updateJob(\n          this.props.accountConnection,\n          this.state.offerContract,\n          this.state.dataHash,\n          this.state.imageHash[0],\n          uploadData.price,\n          this.state.jobId,\n          this.props.account,\n          uploadData.duration\n        );\n        this.setState({ successful: true });\n        // this.getFileData();\n      }\n    );\n  }\n\n  getFileData() {\n    ipfs.files.get(this.state.dataHash, (error, result) => {\n      // console.log('Data hash' , JSON.parse(result[0].content.toString()));\n    });\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    event.preventDefault();\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      let requestToMake = [];\n      for(let i= 0; i < this.state.imageArray.length ; i++){\n          let api =  new Promise((resolve,reject) => {\n                ipfs.files.add(this.state.imageArray[i], (error, result) => {\n                if (error) {\n                  reject(error)\n                }\n                this.setState({\n                  imageHash: [...this.state.imageHash,result[0].hash],\n                });\n                resolve('success');\n            });\n          });\n          requestToMake.push(api);\n      }\n      Promise.all(requestToMake).then((results) => {  \n        this.uploadFormData();\n      },(error) => {\n        \n      });\n    }\n    this.setState({ validated: true });\n  }\n\n  showModal(flag) {\n    this.setState({ modalShow: flag, catFormValidated: false });\n  }\n\n  onSelectedOptionsChange(event) {\n    const value = event.currentTarget.value;\n    this.myChangeHandler(event);\n    this.props.fetchCategories(value);\n    this.setState({ isParentSelected: true });\n  }\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    if (nam == \"duration\") {\n      if (parseInt(val) !== 0) {\n        this.setState({ [nam]: val });\n      }\n    } else {\n      this.setState({ [nam]: val });\n    }\n  };\n\n  // captureFile(event) {\n  //   for (let i = 0; i < event.target.files.length; i++) {\n  //     const file = event.target.files[0];\n  //     const reader = new window.FileReader();\n  //     reader.readAsArrayBuffer(file);\n  //     reader.onloadend = () => {\n  //       const buffer = Buffer(reader.result);\n  //       ipfs.files.add(buffer, (error, result) => {\n  //         if (error) {\n  //           return;\n  //         }\n  //         this.setState({\n  //           imageHash: [...this.state.imageHash, result[0].hash],\n  //         });\n  //       });\n  //     };\n  //   }\n  // }\n\n  captureFile(event) {\n    for (let i = 0; i < event.target.files.length; i++) {\n      const file = event.target.files[i];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadend = () => {\n        this.setState({\n          imageArray: [...this.state.imageArray, Buffer(reader.result)],\n        });\n        this.setState({\n          previewImage: [...this.state.previewImage, URL.createObjectURL(file)],\n        });\n      };\n    }\n  }\n\n  handleTags = (newTags, type) => {\n    if (type == \"skills\") {\n      this.setState({ tags: newTags });\n    } else {\n      this.setState({ features: newTags });\n    }\n  };\n\n  async handleNewCategorySubmit(event) {\n    const form = event.currentTarget;\n    event.preventDefault();\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      // this.setState({catFormValidated:true});\n      await this.props.createNewCategory(\n        this.state.newcat,\n        this.props.account,\n        this.props.contract\n      );\n      this.showModal(false);\n    }\n  }\n\n  render() {\n    return (\n      <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>{`Edit the Job : ${this.state.title}`}</title>\n      </Helmet>\n      <Container className=\"body-padding\">\n        <div style={{ maxWidth: \"640px\", margin: \"auto\" }}>\n          {\n            <>\n              {!this.state.successful ? (\n                <>\n                  <NewCategoryModal\n                    show={this.state.modalShow}\n                    onHide={() => this.showModal(false)}\n                    myChangeHandler={this.myChangeHandler}\n                    validation={this.state.catFormValidated}\n                    handleSubmit={this.handleNewCategorySubmit}\n                  ></NewCategoryModal>\n                  <Form\n                    noValidate\n                    validated={this.state.validated}\n                    onSubmit={this.handleSubmit.bind(this)}\n                  >\n                    <Form.Row>\n                      <Form.Group\n                        as={Col}\n                        lg=\"12\"\n                        controlId=\"validationCustom01\"\n                      >\n                        <Form.Label>Gig Title</Form.Label>\n                        <Form.Control\n                          required\n                          type=\"text\"\n                          name=\"title\"\n                          disabled={this.props.loading}\n                          value={this.state.title}\n                          placeholder=\"A Nice Title\"\n                          onChange={this.myChangeHandler}\n                          autoComplete=\"off\"\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a valid title.\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                      <Form.Group\n                        as={Col}\n                        md=\"6\"\n                        controlId=\"validationCustom02\"\n                      >\n                        <Form.Label>Duration (In Days):</Form.Label>\n                        <Form.Control\n                          required\n                          type=\"number\"\n                          name=\"duration\"\n                          disabled={this.props.loading}\n                          placeholder=\"Duration\"\n                          value={this.state.duration}\n                          onChange={this.myChangeHandler}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a valid duration.\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                      <Form.Group\n                        as={Col}\n                        md=\"6\"\n                        controlId=\"validationCustom04\"\n                      >\n                        <Form.Label>Price (In Dai):</Form.Label>\n                        <Form.Control\n                          required\n                          type=\"number\"\n                          name=\"price\"\n                          disabled={this.props.loading}\n                          placeholder=\"Price\"\n                          value={this.state.price}\n                          onChange={this.myChangeHandler}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a valid price.\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group\n                        as={Col}\n                        md=\"8\"\n                        controlId=\"validationCustom03\"\n                      >\n                        <Form.Label>\n                          <span>Select Parent Category</span>\n                        </Form.Label>\n                        <Form.Control\n                          required\n                          as=\"select\"\n                          size=\"sm\"\n                          value={this.state.parentCategory}\n                          name=\"parentCategory\"\n                          disabled={this.props.loading}\n                          custom\n                          onChange={this.onSelectedOptionsChange.bind(this)}\n                        >\n                          <option value={\"\"}>Choose...</option>\n                          {this.props.categoryList &&\n                            this.props.categoryList.map((parent) => {\n                              return (\n                                <option\n                                  key={parent.name}\n                                  value={parent.name}\n                                  contract={parent.offer}\n                                >\n                                  {parent.name}\n                                </option>\n                              );\n                            })}\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group\n                        as={Col}\n                        md=\"4\"\n                        controlId=\"validationCustom03\"\n                      >\n                        <Button\n                          className=\"new-category-button\"\n                          onClick={() => this.showModal(true)}\n                          variant=\"primary\"\n                          size=\"sm\"\n                          disabled={this.props.loading}\n                          block\n                        >\n                          {this.props.loading ? \"Loading…\" : \"New Category\"}\n                        </Button>\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group\n                        as={Col}\n                        md=\"12\"\n                        controlId=\"validationCustom05\"\n                      >\n                        <Form.Label>Skills</Form.Label>\n                        <ReactTagInput\n                          tags={\n                            this.state.tags.length > 0 ? this.state.tags : []\n                          }\n                          placeholder=\"Type and press enter\"\n                          maxTags={10}\n                          editable={true}\n                          readOnly={this.props.loading}\n                          removeOnBackspace={true}\n                          onChange={(newTags) =>\n                            this.handleTags(newTags, \"skills\")\n                          }\n                        />\n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Group\n                      controlId=\"validationCustom08\"\n                      className=\"image-selector\"\n                    >\n                      <h6 cla>Selected Images:</h6>\n                      {this.state.imageHashBegin &&\n                        this.state.imageHashBegin.map((preview, i) => {\n                          return (\n                            <div class=\"edit-image\" key={i}>\n                              <img src={`https://ipfs.io/ipfs/${preview}`} alt=\"\" />\n                            </div>\n                          );\n                        })}\n                      {this.state.previewImage &&\n                        this.state.previewImage.map((preview, i) => {\n                          return (\n                            <div class=\"edit-image\" key={i}>\n                              <img src={preview} alt=\"\" />\n                            </div>\n                          );\n                      })}\n                    </Form.Group>\n                    <Form.Group controlId=\"validationCustom06\">\n                      <input\n                        type=\"file\"\n                        disabled={this.props.loading}\n                        multiple\n                        onChange={this.captureFile}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId=\"validationCustom07\">\n                      <Form.Label>Description</Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        name=\"description\"\n                        value={this.state.description}\n                        rows={3}\n                        disabled={this.props.loading}\n                        onChange={this.myChangeHandler}\n                        required\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Description field is required.\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group controlId=\"validationCustom09\">\n                      <Form.Label>Package Content</Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        name=\"package\"\n                        value={this.state.package}\n                        disabled={this.props.loading}\n                        rows={3}\n                        onChange={this.myChangeHandler}\n                        required\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Package field is required.\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group controlId=\"validationCustom10\">\n                      <Form.Label>Features</Form.Label>\n                      <ReactTagInput\n                        tags={\n                          this.state.features && this.state.features.length > 0\n                            ? this.state.features\n                            : []\n                        }\n                        placeholder=\"Type and press enter\"\n                        maxTags={15}\n                        editable={true}\n                        readOnly={this.props.loading}\n                        removeOnBackspace={true}\n                        onChange={(newTags) =>\n                          this.handleTags(newTags, \"features\")\n                        }\n                      />\n                    </Form.Group>\n                    <Button\n                      type=\"submit\"\n                      disabled={this.props.loading}\n                      className=\"submit btn btn-block btn-large\"\n                    >\n                      {this.props.loading ? \"Loading…\" : \"Submit\"}\n                    </Button>\n                  </Form>\n                </>\n              ) : !this.props.error ? (\n                <div>\n                  <p className=\"text-center\">\n                    You're job has been posted successfully\n                  </p>\n                </div>\n              ) : (\n                <div>\n                  <p className=\"text-center\">Error posting the job</p>\n                </div>\n              )}\n            </>\n            //  (\n            //    <Spinner animation=\"border\" role=\"status\">\n            //      <span className=\"sr-only\">Loading...</span>\n            //    </Spinner>\n            //  )\n          }\n        </div>\n      </Container>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { web3, account, contract, accountConnection } = state.common;\n  let error = state.jobReducer.error;\n  let loading = state.jobReducer.loading;\n  const { detailData } = state.jobReducer;\n  const { categoryList } = state.categoryList;\n  return {\n    parentCategories: state.common.parentCategories,\n    categories: state.category.categoryItems,\n    hashedData: state.fetchJobs.hashedData,\n    web3,\n    account,\n    loading,\n    error,\n    contract,\n    detailData,\n    categoryList,\n    accountConnection,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchCategories: (id) => dispatch(fetchCategories(id)),\n    fetchHashJobData: (id) => dispatch(fetchData(id)),\n    createNewCategory: (name, addr, contract) =>\n      dispatch(createNewCategory(name, addr, contract)),\n    updateJob: (\n      web3,\n      contract,\n      hash,\n      thumbnail,\n      price,\n      id,\n      account,\n      duration\n    ) =>\n      dispatch(\n        updateJob(web3, contract, hash, thumbnail, price, id, account, duration)\n      ),\n    connectIfAuthorized: () => dispatch(connectIfAuthorized()),\n    getCategoriesList: (contract, account) =>\n      dispatch(getCategoriesList(contract, account)),\n    getJobDetail: (web3, id, offerContract) =>\n      dispatch(getJobDetail(web3, id, offerContract)),\n  };\n}\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(JobEdit)\n);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/JobDescription.jsx",["264","265","266","267"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col, Badge, Container } from \"react-bootstrap\";\nimport { fetchData } from \"../../actions/categoryActions\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport { deleteJob, getJobDetail, placeOrder } from \"../../actions/jobActions\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { genKeyPairFromSeed } from \"skynet-js\";\nimport { UserPriceDetail } from \"../UserPriceDetail.jsx\";\nimport { Helmet } from \"react-helmet\";\n\nclass JobDescription extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hashedData: {},\n      offerContract: \"\",\n      jobId: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    const jobId = this.props.match.params.jobId;\n    const offerContract = this.props.match.params.offerContract;\n    this.setState({ offerContract: offerContract, jobId: jobId });\n    await this.props.getJobDetail(this.props.web3, jobId, offerContract);\n\n    let jobData = await fetchData(this.props.detailData.ipfs_hash);\n    this.setState({ hashedData: jobData });\n  }\n\n  deleteJob = async () => {\n    const jobId = this.props.match.params.jobId;\n    const offerContract = this.props.match.params.offerContract;\n    await this.props.deleteJob(\n      this.props.accountConnection,\n      offerContract,\n      this.props.account,\n      jobId\n    );\n    this.props.history.push(\"/\");\n  };\n\n  makeid = (length) => {\n    var result = [];\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result.push(\n        characters.charAt(Math.floor(Math.random() * charactersLength))\n      );\n    }\n    return result.join(\"\");\n  };\n\n  placeOrder = async () => {\n    const cientProvider = this.makeid(200);\n    let { publicKey, privateKey } = genKeyPairFromSeed(cientProvider);\n    const jobId = this.props.match.params.jobId;\n    const offerContract = this.props.match.params.offerContract;\n    this.props.placeOrder(\n      this.props.account,\n      this.props.accountConnection,\n      jobId,\n      offerContract,\n      publicKey,\n      privateKey\n    );\n  };\n\n  naviageToUpdate = () => {\n    this.props.history.push(\n      `/editdata/${this.state.jobId}/${this.state.offerContract}`\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>{`Description of Job:${this.state.hashedData.title}`}</title>\n        </Helmet>\n        <Container className=\"body-padding\">\n          {!this.props.loading &&\n          this.state.hashedData &&\n          this.state.hashedData.imageHash ? (\n            <Row className=\"job-desctiption-page\">\n              <Col md={8} xs={12}>\n                <h1>{this.state.hashedData.title}</h1>\n                <div className=\"customer-data\">\n                  <a>\n                    <span className=\"customer-image\">\n                      <img src=\"https://t3.ftcdn.net/jpg/01/83/55/76/360_F_183557656_DRcvOesmfDl5BIyhPKrcWANFKy2964i9.jpg\" />\n                    </span>\n                  </a>\n                  <Link\n                    to={\"/customers/\" + this.props.detailData.service_provider}\n                  >\n                    <span className=\"customer-name\">\n                      {this.props.detailData.service_provider}\n                    </span>\n                  </Link>\n                </div>\n                <div className=\"job-details\">\n                  <div className=\"job-image\">\n                    <Carousel\n                      controls={this.state.hashedData.imageHash.length > 1}\n                      indicators={false}\n                    >\n                      {this.state.hashedData.imageHash &&\n                        this.state.hashedData.imageHash.map((preview, i) => {\n                          return (\n                            <Carousel.Item key={i}>\n                              <img\n                                src={`https://ipfs.io/ipfs/${preview}`}\n                                alt=\"Description Card image\"\n                              />\n                            </Carousel.Item>\n                          );\n                        })}\n                    </Carousel>\n                    <img src={this.state.hashedData.image} />\n                  </div>\n                  <br />\n                  <div>\n                    <h4>About Job:</h4>\n                    <p className=\"ws-pl\">{this.state.hashedData.description}</p>\n                  </div>\n                  <br />\n                  <div>\n                    <h5>Skills:</h5>\n                    {this.state.hashedData.tags &&\n                      this.state.hashedData.tags.map((skill, i) => {\n                        return (\n                          <Badge key={i} pill variant=\"secondary\">\n                            {skill}\n                          </Badge>\n                        );\n                      })}\n                  </div>\n                  <br />\n                </div>\n              </Col>\n              <Col md={4} xs={12}>\n                {this.state.hashedData && (\n                  <UserPriceDetail\n                    hashId={this.state.jobId}\n                    offerContract={this.state.offerContract}\n                    data={this.state.hashedData}\n                    deleteHandler={this.deleteJob}\n                    loader={this.props.jobloader}\n                    navigateToUpdate={this.naviageToUpdate}\n                    placeOrderHandler={this.placeOrder}\n                    account={this.props.account}\n                    provider={this.props.detailData.service_provider}\n                  ></UserPriceDetail>\n                )}\n              </Col>\n            </Row>\n          ) : (\n            <div className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </div>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  let loading = true;\n  loading = state.jobReducer.loading;\n  const { web3, accountConnection, account, contract } = state.common;\n  const { detailData, error, jobloader } = state.jobReducer;\n  return {\n    jobDescription: state.fetchJobs.jobDescription[0],\n    hashedData: state.fetchJobs.hashedData,\n    web3,\n    accountConnection,\n    account,\n    loading,\n    error,\n    contract,\n    detailData,\n    jobloader,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchHashJobData: (id) => dispatch(fetchData(id)),\n    deleteJob: (web3, contract, account, id) =>\n      dispatch(deleteJob(web3, contract, account, id)),\n    getJobDetail: (web3, id, offerContract) =>\n      dispatch(getJobDetail(web3, id, offerContract)),\n    placeOrder: (\n      account,\n      web3,\n      id,\n      offerContract,\n      clientPorvider,\n      serviceProvider\n    ) =>\n      dispatch(\n        placeOrder(\n          account,\n          web3,\n          id,\n          offerContract,\n          clientPorvider,\n          serviceProvider\n        )\n      ),\n  };\n}\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(withRouter(JobDescription))\n);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/Home.jsx",["268","269"],"import React, { Component } from \"react\";\nimport { Col, Container, Row, Spinner } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { getAllCategoryJobs } from \"../../actions/jobListActions\";\nimport { connectIfAuthorized, connectWallet } from \"../../actions/commonAction\";\nimport { home_contract_addresses } from \"../../config\";\nimport Header from \"../common/Header\";\nimport CardList from \"../CardList\";\nimport { Helmet } from \"react-helmet\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n    await this.getAllCategories();\n  }\n\n  getAllCategories = async () => {\n    await this.props.getAllCategoryJobs(\n      this.props.account,\n      this.props.web3,\n      home_contract_addresses\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Home</title>\n        </Helmet>\n        <Header onScroll={true} />\n        <div className=\"poster\">\n          <Container>\n            {/* <img src=\"/assets/img/banner.png\" alt=\"\" /> */}\n            <Row className=\"align-center\">\n              <Col md={5}>\n                <h1>\n                  Welcome to the <b>Work-Sphere</b>\n                </h1>\n                <p>\n                  Post your gig or get your Job done with 360 degree freedom in\n                  your work-space with complete data security, ensured by fully\n                  transparent Governance.\n                </p>\n              </Col>\n              <Col md={7}>\n                <img src=\"/assets/img/banner-1.svg\" alt=\"\" />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        <Container>\n          {this.props.loading && (\n            <div className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </div>\n          )}\n          <Row className=\"collections-list\">\n            {this.props.fulllist &&\n              this.props.fulllist.map((job, i) => {\n                return (\n                  <CardList\n                    key={i}\n                    categoryName={job.name}\n                    list={job.list}\n                    categoryContract={job.offerContract}\n                  ></CardList>\n                );\n              })}\n          </Row>\n        </Container>\n        <br />\n        <br />\n        <br />\n        <br />\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { web3, account, error, contract } = state.common;\n  const { fulllist, loading } = state.jobList;\n\n  return {\n    web3,\n    account,\n    error,\n    contract,\n    fulllist,\n    loading,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectIfAuthorized: () => dispatch(connectIfAuthorized()),\n    getAllCategoryJobs: (account, web3, offerContract) =>\n      dispatch(getAllCategoryJobs(account, web3, offerContract)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/commonAction.js",["270","271","272","273","274","275"],"import {FETCH_PARENT_CATEGORIES, WALLET_CONNECT_REQUEST, WALLET_CONNECT_SUCCESS, WALLET_CONNECT_ERROR, FETCH_CUSTOMER_DATA, ACCOUNT_CONNECTION} from '../constants';\n\nimport Web3 from \"web3\";\nimport { CATEGORY_CONTRACT_ADDRESS } from \"../config\";\nimport { CATEGORY_CONTRACT_ABI } from '../config/abi/categoryContract';\n\n/**\n * connect wallet\n * takes out account\n * initialize liberty pie core contract with abi\n * initialize permission manager contract\n */\nexport const connectWallet = () => async dispatch =>  {\n\n    if (window.ethereum) {\n\n        const web3 = new Web3(window.ethereum);\n\n\n        try {\n            var chainId = parseInt(window.ethereum.chainId, 16);\n            if(chainId != 3){\n                alert(\"Please change your network to Ropsten\")\n                throw Error;\n            }\n            // Request account access if needed\n            await window.ethereum.enable();\n            // Acccounts now exposed\n          \n            let data = await initialize(web3);\n          \n            hookInWalletChange();\n            dispatch({type: ACCOUNT_CONNECTION, ...data});\n        } catch (error) {\n            console.error(error);\n        }\n    }else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n  \n        let data = await initialize(web3);\n\n        hookInWalletChange();\n        dispatch({type: ACCOUNT_CONNECTION, ...data});\n    }else {\n        dispatch({type: WALLET_CONNECT_ERROR});\n    }\n}\n\n\n\n\n/**\n * connect if authorize\n * takes out account\n * initialize liberty pie core contract with abi\n * initialize permission manager contract\n */\nexport const connectIfAuthorized = () => async dispatch =>  {\n\n    dispatch({type: WALLET_CONNECT_REQUEST});\n\n    let web3 = new Web3('wss://ropsten.infura.io/ws/v3/5a0874c0f5464a0b8e4050e5528bf94d');\n\n    let contract = new web3.eth.Contract(CATEGORY_CONTRACT_ABI, CATEGORY_CONTRACT_ADDRESS);\n\n    dispatch({type: WALLET_CONNECT_SUCCESS, web3: web3, contract: contract});\n    \n    if (window.ethereum) {\n        try{\n            const web3 = new Web3(window.ethereum);\n\n            let data = await initialize(web3);\n            hookInWalletChange();\n\n            var chainId = parseInt(window.ethereum.chainId, 16);\n            if(chainId != 3){\n                alert(\"Please change your network to Ropsten\");\n            }else{\n\n                if(data.account){\n                    dispatch({type: ACCOUNT_CONNECTION, ...data});\n                }\n            }\n            \n        }catch (error) {\n        }\n    }\n}\n\n\n\n\n/**\n * Private Function\n * hinitialize contract, account & permission manager\n * @param {web3 obbject} web3\n */\nasync function initialize(web3){\n\n    var accounts = await web3.eth.getAccounts();\n\n    if(accounts.length > 0){\n        var firstAcc = accounts[0];\n\n        let contract = new web3.eth.Contract(CATEGORY_CONTRACT_ABI, CATEGORY_CONTRACT_ADDRESS);\n\n        return({accountConnection: web3, contract: contract, account: firstAcc});\n    }\n}\n\n\n/**\n * Private Function\n * hook with account change and network change\n */\nfunction hookInWalletChange(){\n    window.ethereum.on('accountsChanged', function (accounts) {\n        window.location.href = window.location.href;\n    })\n    \n    window.ethereum.on('networkChanged', function (networkId) {\n        window.location.href = window.location.href;\n    })\n}","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/categoryActions.js",["276"],"import {FETCH_CATEGORIES, FETCH_FEATURED_JOBS , FETCH_HIGHRATED_JOBS , FETCH_NEW_JOBS , FETCH_JOB_DATA, FETCH_HASH_JOB_DATA, FETCH_JOBS_BY_CATEGORY , FETCH_ACTIVE_BUYER_JOBS , CATEGORY_CU_REQUEST , CATEGORY_CU_SUCCESS , CATEGORY_CU_ERROR} from '../constants';\n\nimport ipfs from '../ipfs';\n\nexport const fetchCategories = (id) => ({\n    type:FETCH_CATEGORIES,\n    categoryId:id,\n    // payload:JSON.parse(JSON.stringify(jsonData))\n});\n\nexport const fetchFeaturedJobs = () => ({\n    type:FETCH_FEATURED_JOBS,\n    // payload:JSON.parse(JSON.stringify(jobsData))\n});\n\nexport const fetchHighRatedJobs = () => ({\n    type:FETCH_HIGHRATED_JOBS,\n    // payload:JSON.parse(JSON.stringify(jobsData))\n});\n\nexport const fetchNewJobs = () => ({\n    type:FETCH_NEW_JOBS,\n    // payload:JSON.parse(JSON.stringify(jobsData))\n});\n\nexport const fetchJobData = (id) => ({\n    type:FETCH_JOB_DATA,\n    jobId:id,\n    // payload:JSON.parse(JSON.stringify(jobsData))\n});\n\nexport const fecthJobByCategory = (id) => ({\n    type:FETCH_JOBS_BY_CATEGORY,\n    categoryId:id,\n    // payload:JSON.parse(JSON.stringify(jobsData))\n})\n\nexport function fetchData(id){\n    return new Promise((resolve, reject) => {\n        \n        ipfs.files.get(id , (error , result) => {\n            if(error){\n                resolve(null)\n            }else{\n                resolve(JSON.parse(result[0].content.toString()));\n            }\n        });\n\n    });\n}\n\n\n\n\nexport const fetchActiveJobs = (id , flag) => ({\n    type:FETCH_ACTIVE_BUYER_JOBS,\n    userId:id,\n    flag:flag,\n})\n\nexport const createNewCategory = (name, addr, contract) => async dispatch => {\n    dispatch({type: CATEGORY_CU_REQUEST});\n    try{\n        let id = await contract.methods.create(name).send({from: addr});\n        dispatch({type: CATEGORY_CU_SUCCESS, id: id, category: name});\n    }catch(e){\n        console.log(e);\n        dispatch({type: CATEGORY_CU_ERROR});\n    }\n}\n\n\n\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/ChatPage.jsx",["277","278","279","280","281","282","283"],"import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Chat } from \"../../controllers/Chat\";\nimport { Row, Col, Badge, Container, Spinner } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { BUYER, SELLER } from \"../../constants\";\nimport {\n  getAddresses,\n  getClientProvider,\n  getOrderDetail,\n  getServiceProvider,\n} from \"../../actions/orderActions\";\nimport { Helmet } from \"react-helmet\";\nimport { GrAttachment } from \"react-icons/gr\";\nimport ipfs from \"../../ipfs\";\n\n\nclass ChatPage extends Component {\n  state = {\n    msg: \"\",\n    chat: null,\n    messages: [],\n    usera: \"me\",\n    userb: null,\n    loadId: null,\n    orderData: {},\n    loading:false\n  };\n\n  async componentDidMount() {\n    if (this.props.accountConnection) {\n      await this.start();\n    }\n  }\n\n  async componentDidUpdate(props, state) {\n    if (this.props.accountConnection != props.accountConnection) {\n      await this.start();\n    }\n  }\n\n  start = async () => {\n    this.connectToSkyNet();\n\n    let data = await getOrderDetail(\n      this.props.web3,\n      this.props.account,\n      this.props.match.params.orderContract\n    );\n\n    this.setState({ orderData: data.data });\n  };\n\n  connectToSkyNet = async () => {\n    const userType = this.getUserTpe(this.props.match.url);\n    let keys = [];\n\n    let addresses = await getAddresses(\n      this.props.accountConnection,\n      this.props.match.params.orderContract\n    );\n\n    let from = addresses.client;\n    let to = addresses.serviceProvider;\n\n    if (userType === BUYER) {\n      keys = await getClientProvider(\n        this.props.accountConnection,\n        this.props.account,\n        this.props.match.params.orderContract\n      );\n    } else {\n      keys = await getServiceProvider(\n        this.props.accountConnection,\n        this.props.account,\n        this.props.match.params.orderContract\n      );\n\n      from = addresses.serviceProvider;\n      to = addresses.client;\n    }\n\n    const chat = new Chat(keys[0], keys[1], keys[2], \"p2p-chat\", from, to);\n\n    this.setState({\n      chat: chat,\n      userb: to,\n      usera: from,\n    });\n\n    await this.keepLoadingData();\n  };\n\n  getUserTpe = (locationUrl) => {\n    let param = locationUrl.split(\"/\")[2];\n    return param;\n  };\n\n  componentWillUnmount() {\n    if (this.state.loadId) {\n      clearInterval(this.state.loadId);\n    }\n  }\n\n  keepLoadingData = async () => {\n    const that = this;\n    if (this.state.loadId) {\n      clearInterval(this.state.loadId);\n    }\n\n    if (that.state.chat) {\n      const msg = await that.state.chat.loadMessages();\n      if (msg.chat != that.state.messages) {\n        that.setState({\n          messages: msg.chat\n        });\n      }\n\n      let loadId = setInterval(async () => {\n        const msg = await that.state.chat.loadMessages();\n        if (msg.chat.toString() != that.state.messages.toString()) {\n          that.setState({\n            messages: msg.chat,\n            loading:false\n          });\n          this.scrollToBottom();\n        }\n      }, 5000);\n\n      this.setState({ loadId: loadId });\n    }\n  };\n\n  handleInput = (e) => {\n    this.setState({\n      msg: e.target.value,\n    });\n  };\n\n  sendMessage = async () => {\n      if (this.state.msg != \"\") {\n        await this.state.chat.waitAndMessage(this.state.msg, \"txt\");\n        this.setState({\n          msg: \"\",\n        });\n      }\n  };\n\n  scrollToBottom() {\n    const objDiv = document.getElementById(\"chat-body-div\");\n    objDiv.scrollTop = objDiv.scrollHeight;\n  }\n\n  upload_file_to_ipfs = (data) => {\n    return new Promise((resolve,reject)=>{\n      ipfs.files.add(data, (error, result) => {\n        if (error) {\n          reject(error)\n        }\n        resolve(result[0].hash);\n      });\n    });\n  }\n\n  attachFile = async (event) => {\n    this.setState({loading:true});\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = async() => {\n      this.scrollToBottom();\n      let ipfs_hash = await this.upload_file_to_ipfs(Buffer(reader.result));\n      let message = `LINK TO IPFS_HASH : <a href=https://ipfs.io/ipfs/${ipfs_hash} class=\"\" target='_blank'>${ipfs_hash}</a>`;\n      await this.state.chat.waitAndMessage(message, \"file\");\n    };\n    \n  };\n\n  createHtml = (msg) => {\n    return {\n      __html: msg.msg};\n  }\n\n  render() {\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>{`Chat Page for Order:${this.state.orderData.title}`}</title>\n        </Helmet>\n        <Container className=\"body-padding\">\n          <Row>\n            <Col md={4}>\n              {this.state.orderData.title && (\n                <>\n                  <h3>{this.state.orderData.title}</h3>\n                  <hr />\n                  <h4>{this.state.orderData.price} Dai</h4>\n                  <hr />\n                  <p>{this.state.orderData.description.substring(0, 200)}..</p>\n                </>\n              )}\n            </Col>\n            <Col md={8}>\n              <div className=\"chat-feed\">\n                <div className=\"chat-body\" id=\"chat-body-div\">\n                    {this.state.messages.map((msg, inex) => (\n                      <div key={inex} className=\"message-block\">\n                        <div className=\"message-row\">\n                          <div\n                            className={\n                              msg.from == this.state.usera\n                                ? \"chat-right message\"\n                                : \"chat-left message\"\n                            }\n                          >\n                            \n                            <span dangerouslySetInnerHTML={{ __html: msg.msg }}></span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                    {this.state.loading &&\n                    <div className=\"chat-loader\">\n                          <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                          </Spinner>\n                    </div>\n                    }\n                    <br />\n                    <br />\n                </div>\n                \n                <div className=\"message-form-container\">\n                  <div className=\"message-form\">\n                    <textarea\n                      className=\"message-input\"\n                      onChange={this.handleInput}\n                      rows=\"3\"\n                      placeholder=\"Send a message ...\"\n                      value={this.state.msg}\n                    />\n                    <div className=\"attachment-btn\">\n                      <input type=\"file\" onChange={this.attachFile} disabled={this.state.loading} />\n                      <GrAttachment disabled={this.state.loading}\n                        size=\"25px\"\n                      ></GrAttachment>\n                    </div>\n                    <div className=\"send-msg-button\" onClick={this.sendMessage}>\n                      Send\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { web3, accountConnection, account, contract } = state.common;\n  return {\n    activeJobs: state.fetchJobs.activeJobs,\n    web3,\n    accountConnection,\n    account,\n    contract,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(withRouter(ChatPage))\n);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/categoryListReducer.js",["284"],"import {CATEGORY_LIST_REQUEST , CATEGORY_LIST_SUCCESS , CATEGORY_LIST_ERROR} from '../constants';\n\nconst initialState = {\n  categoryList:[],  \n  loading: false,\n  error: false\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case CATEGORY_LIST_REQUEST: \n        return {\n            ...state,\n            error: false,\n            loading: true\n        }\n        case CATEGORY_LIST_SUCCESS:\n          return {\n            ...state,\n            categoryList: action.list,\n            error: false,\n            loading: false\n          }\n        case CATEGORY_LIST_ERROR:\n          return {\n            ...state,\n            categoryList: [],\n            error:true\n          }\n        default:\n            return state;\n    }\n  }","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/JobReducers.js",["285"],"import {POST_JOB_REQUEST , POST_JOB_SUCCESS , POST_JOB_ERROR , POST_UPDATE_JOB_REQUEST , POST_UPDATE_JOB_SUCCESS , POST_UPDATE_JOB_ERROR , DELETE_JOB_REQUEST ,DELETE_JOB_SUCCESS ,  DELETE_JOB_ERROR, JOB_DETAIL_REQUEST, JOB_DETAIL_SUCCESS, JOB_DETAIL_ERROR , PLACE_ORDER_REQUEST , PLACE_ORDER_SUCCESS , PLACE_ORDER_ERROR} from '../constants';\n\nconst initialState = {\n  loading: false,\n  error: false,\n  jobloader:false\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case POST_JOB_REQUEST: \n        return {\n            ...state,\n            error: false,\n            loading: true\n        }\n        case POST_JOB_SUCCESS:\n          return {\n            ...state,\n            error: false,\n            loading: false\n          }\n        case POST_JOB_ERROR:\n          return {\n            ...state,\n            loading:false,\n            error:true\n          }\n          case POST_UPDATE_JOB_REQUEST: \n        return {\n            ...state,\n            error: false,\n            loading: true\n        }\n        case POST_UPDATE_JOB_SUCCESS:\n          return {\n            ...state,\n            error: false,\n            loading: false\n          }\n        case POST_UPDATE_JOB_ERROR:\n          return {\n            ...state,\n            error:true\n          }\n          case DELETE_JOB_REQUEST: \n        return {\n            ...state,\n            error: false,\n            jobloader: true\n        }\n        case DELETE_JOB_SUCCESS:\n          return {\n            ...state,\n            error: false,\n            jobloader: false\n          }\n        case DELETE_JOB_ERROR:\n          return {\n            ...state,\n            jobloader:false\n          }\n        case JOB_DETAIL_REQUEST:\n          return{\n            ...state,\n            error:false,\n            loading:true\n          } \n          case JOB_DETAIL_SUCCESS:\n            return {\n              ...state,\n              detailData:action.detail,\n              error: false,\n              loading: false\n            }\n          case JOB_DETAIL_ERROR:\n            return {\n              ...state,\n              error:true\n            }  \n            case PLACE_ORDER_REQUEST:\n          return{\n            ...state,\n            error:false,\n            jobloader:true\n          } \n          case PLACE_ORDER_SUCCESS:\n            return {\n              ...state,\n              error: false,\n              jobloader: false\n            }\n          case PLACE_ORDER_ERROR:\n            return {\n              ...state,\n              jobloader:false\n            }  \n        default:\n            return state;\n    }\n  }","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/reducers/jobListReducer.js",["286"],"import {JOB_LIST_REQUEST , JOB_LIST_SUCCESS , JOB_LIST_ERROR , ALL_JOB_LIST_REQUEST , ALL_JOB_LIST_SUCCESS , ALL_JOB_LIST_ERROR , CLIENT_LIST_REQUEST , CLIENT_LIST_SUCCESS , CLIENT_LIST_ERROR} from '../constants';\n\nconst initialState = {\n  list:[],  \n  loading: false,\n  error: false,\n  fulllist:[],\n  categoryNane: \"\"\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case JOB_LIST_REQUEST: \n        return {\n            ...state,\n            error: false,\n            loading: true\n        }\n        case JOB_LIST_SUCCESS: \n          return {\n            ...state,\n            start:action.start,\n            end:action.end,\n            list: action.list,\n            categoryNane: action.name,\n            error: false,\n            loading: false\n          }\n        case JOB_LIST_ERROR:\n          return {\n            ...state,\n            list: [],\n            error:true\n        }\n        case ALL_JOB_LIST_REQUEST: \n        return {\n            ...state,\n            error: false,\n            loading: true\n        }\n        case ALL_JOB_LIST_SUCCESS: \n          return {\n            ...state,\n            fulllist: action.list,\n            error: false,\n            loading: false\n          }\n        case ALL_JOB_LIST_ERROR:\n          return {\n            ...state,\n            fulllist: [],\n            error:true\n        }\n        case CLIENT_LIST_REQUEST: \n        return {\n            ...state,\n            error: false,\n            loading: true\n        }\n        case CLIENT_LIST_SUCCESS: \n          return {\n            ...state,\n            start:action.start,\n            end:action.end,\n            list: action.list,\n            categoryNane: action.name,\n            error: false,\n            loading: false\n          }\n        case CLIENT_LIST_ERROR:\n          return {\n            ...state,\n            list: [],\n            error:true\n        }\n        default:\n            return state;\n    }\n  }","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/categoryListAction.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/NotFound.jsx",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/OrderList.jsx",["287","288","289","290","291","292","293"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchActiveJobs } from \"../../actions/categoryActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { Row, Col, Badge, Container } from \"react-bootstrap\";\nimport {\n  getClientProviderList,\n  getServiceProviderList,\n} from \"../../actions/jobListActions\";\nimport { connectWallet } from \"../../actions/commonAction\";\nimport { BUYER, SELLER } from \"../../constants\";\nimport OrderItemList from \"../OrderItemList\";\nimport { Helmet } from \"react-helmet\";\n\nclass OrderList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: \"currentJobs\",\n      currentTab: \"orderlist\",\n    };\n    this.changeTab = this.changeTab.bind(this);\n  }\n\n  async componentDidMount() {\n    this.getOrderData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let prevUserType = this.getUserTpe(prevProps.match.url);\n    let userType = this.getUserTpe(this.props.match.url);\n    if (\n      prevUserType !== userType ||\n      prevProps.accountConnection != this.props.accountConnection\n    ) {\n      this.getOrderData();\n    }\n  }\n\n  getUserTpe = (locationUrl) => {\n    let param = locationUrl.split(\"/\")[2];\n    return param;\n  };\n\n  getOrderData = async () => {\n    const userType = this.getUserTpe(this.props.match.url);\n    console.log(this.props.accountConnection, this.props.account);\n    if (userType == BUYER) {\n      await this.props.getClientProviderList(\n        this.props.accountConnection,\n        this.props.account,\n        this.props.contract\n      );\n    } else if (userType == SELLER) {\n      await this.props.getServiceProviderList(\n        this.props.accountConnection,\n        this.props.account,\n        this.props.contract\n      );\n    }\n  };\n\n  // getJobData(activeTab , flag){\n  //     this.props.fetchActiveJobs('123' , flag);\n  //     this.setState({activeTab:activeTab});\n  // }\n\n  changeTab(name) {\n    this.setState({ currentTab: name });\n  }\n\n  render() {\n    const type = this.getUserTpe(this.props.match.url);\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>List the Orders</title>\n        </Helmet>\n        <Container className=\"body-padding\">\n          <Row>\n            <Col className=\"dashboard-menus\" md={12}>\n              <nav className=\"site-nav\">\n                <ul>\n                  {/* <li\n                    className={\n                      this.state.currentTab == \"dashboard\" ? \"active\" : \"\"\n                    }\n                  >\n                    <a\n                      href=\"javaScript:void(0)\"\n                      onClick={() => this.changeTab(\"dashboard\")}\n                    >\n                      DashBorad\n                    </a>\n                  </li> */}\n                  <li\n                    className={\n                      this.state.currentTab == \"orderlist\" ? \"active\" : \"\"\n                    }\n                  >\n                    <a\n                      href=\"javaScript:void(0)\"\n                      onClick={() => this.changeTab(\"orderlist\")}\n                    >\n                      OrderList\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n            </Col>\n          </Row>\n          {/* {this.state.currentTab == \"dashboard\" && (\n          <Row>\n            <Col md={12} className=\"buyer\">\n              <p className=\"dashboard-header\">Statistics</p>\n              <Row className=\"buyer-stats\">\n                <Col md={3}>\n                  <h3>100</h3>\n                  <h5>Number of orders</h5>\n                  <p>+14.00(+0.50%)</p>\n                </Col>\n                <Col md={3}>\n                  <h3>$32,451</h3>\n                  <h5>Total value of orders</h5>\n                  <p>+14.00(+0.50%)</p>\n                </Col>\n                <Col md={3}>\n                  <h3>80</h3>\n                  <h5>Successfully completed</h5>\n                  <p>+14.00(+0.50%)</p>\n                </Col>\n                <Col md={3}>\n                  <h3>20</h3>\n                  <h5>Rejected Orders</h5>\n                  <p>+14.00(+0.50%)</p>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        )} */}\n          {this.state.currentTab == \"orderlist\" && (\n            <div className=\"order-list-page\">\n              {this.props.list &&\n                !this.props.loading &&\n                this.props.list.map((value, i) => {\n                  return (\n                    <Row key={i} className=\"order-list-items\">\n                      <OrderItemList\n                        orderContract={value}\n                        web3={this.props.accountConnection}\n                        history={this.props.history}\n                        account={this.props.account}\n                        column=\"3\"\n                        type={type}\n                      ></OrderItemList>\n                    </Row>\n                  );\n                })}\n            </div>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { web3, accountConnection, account, contract } = state.common;\n  const { list, loading, error } = state.jobList;\n  return {\n    activeJobs: state.fetchJobs.activeJobs,\n    web3,\n    accountConnection,\n    account,\n    contract,\n    list,\n    loading,\n    error,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchActiveJobs: (id, flag) => dispatch(fetchActiveJobs(id, flag)),\n    getServiceProviderList: (web3, account, contract) =>\n      dispatch(getServiceProviderList(web3, account, contract)),\n    getClientProviderList: (web3, account, contract) =>\n      dispatch(getClientProviderList(web3, account, contract)),\n    connectWallet: () => dispatch(connectWallet()),\n  };\n}\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(withRouter(OrderList))\n);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/jobListActions.js",["294","295"],"import { OFFER_CONTRACT_ABI } from '../config/abi/offerContract';\nimport {JOB_LIST_REQUEST , JOB_LIST_SUCCESS , JOB_LIST_ERROR , ALL_JOB_LIST_REQUEST , ALL_JOB_LIST_SUCCESS , ALL_JOB_LIST_ERROR , CLIENT_LIST_REQUEST , CLIENT_LIST_SUCCESS , CLIENT_LIST_ERROR} from '../constants';\n\n\n/**\n * get list of categories\n * @param {contract object} contract\n */\nexport const getJobsList = (contract , account , web3 , offerContract, _start, jlist) => async dispatch => {\n    dispatch({type: JOB_LIST_REQUEST});\n    try{\n        let filteredCategory = [];\n        let contract = new web3.eth.Contract(OFFER_CONTRACT_ABI, offerContract);\n        let iStart = _start;\n        let start = await contract.methods.start().call();\n        if(!iStart){\n            iStart = start;\n        }\n        let end = await contract.methods.end().call();\n        let category_name = await contract.methods.category().call();\n        let categories = await contract.methods.read(iStart , 12).call();\n        filteredCategory = categories.filter((cat) =>{ return cat.ipfs_hash != \"\"});\n        let conArray = jlist.concat(filteredCategory);\n\n        dispatch({type: JOB_LIST_SUCCESS, list:  conArray , start:start , end:end, name: category_name});\n    }catch(e){\n        dispatch({type: JOB_LIST_ERROR});\n    }\n}\n\nexport const getAllCategoryJobs = (account , web3 , contractList) => async dispatch => {\n    dispatch({type:ALL_JOB_LIST_REQUEST});\n    try{\n        let list = [];\n        for(let i = 0; i<contractList.length; i++){\n\n            let ocontract = new web3.eth.Contract(OFFER_CONTRACT_ABI, contractList[i]);\n            let category = await ocontract.methods.category().call();\n            let start = await ocontract.methods.start().call();\n            let categories = await ocontract.methods.read(start , 10 ).call();\n            list = [...list , {'name':category , list:categories.filter((cat) =>{ return cat.ipfs_hash != \"\"}) , offerContract:contractList[i]}];\n\n        }\n        dispatch({type:ALL_JOB_LIST_SUCCESS,list:list});\n    }catch(e){\n        dispatch({type:ALL_JOB_LIST_ERROR});\n    }\n}\n\nexport const getClientProviderList = (web3 , accounts , contract) => async dispatch => {\n    dispatch({type:CLIENT_LIST_REQUEST});\n    try {\n        let list = await contract.methods.getClientOrders(accounts).call();\n        dispatch({type:CLIENT_LIST_SUCCESS , list:list});\n    }catch(e){\n        dispatch({type:CLIENT_LIST_ERROR});\n    }\n\n}\n\nexport const getServiceProviderList = (web3 , accounts , contract) => async dispatch => {\n    dispatch({type:CLIENT_LIST_REQUEST});\n    \n    try {\n        let list = await contract.methods.getServiceProviderOrders(accounts).call();\n        // let list = await contract.methods.getServiceProviderOrders(accounts).call();\n        dispatch({type:CLIENT_LIST_SUCCESS , list:list});\n    }catch(e){\n        console.log(e);\n        dispatch({type:CLIENT_LIST_ERROR});\n    }\n\n}\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/config.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/controllers/Chat.js",["296","297","298","299","300","301","302","303"],"import { SkynetClient, genKeyPairFromSeed } from \"skynet-js\";\nimport { BUYER, SELLER } from \"../constants\";\n\nexport class Chat{\n\n\n    constructor(user1privateKey, user1publicKey ,  user2PublicKey,  topic , from, to){\n        this.client = new SkynetClient(\"https://skyportal.xyz\");\n\n\n        this.publicKey = user1publicKey;\n        this.privateKey = user1privateKey;\n\n        this.publicKey2 = user2PublicKey;\n\n        this.from = from;\n        this.to = to;\n        this.topic = topic;\n    }\n\n    async loadMessages(){\n        this.loadMessage = true;\n        let error = false;\n        this.messages = {chat: []};\n        let message1 = await this.loadUser1Messages();\n        let message2 = await this.loadUser2Messages();\n\n        let min_let = Math.min(message1.length, message2.length);\n\n        // check if old messages are not altered\n        for(let i = 0; i < min_let; i++){\n            if(JSON.stringify(message1[i]) != JSON.stringify(message2[i])){\n                error = true;\n                console.log(\"Old message altered\");\n                break;\n            }\n        }\n\n        // check if new messages are only from user 2\n        if(message1.length < message2.length){\n            for(let i = message1.length; i < message2.length; i++){\n                if(message2[i].from != this.to || message2[i].to != this.from){\n                    error = true;\n                    console.log(\"Message are not sent by same user\");\n                    break;\n                }\n            }\n        }\n\n        if(!error){\n            this.messages = { chat: message1 };\n\n            for(let i = message1.length; i < message2.length; i++){\n                this.messages.chat.push(message2[i]);\n            }\n\n            if(this.messages.chat != message1){\n                await this.client.db.setJSON(this.privateKey, this.topic, this.messages);\n            }\n        }\n\n        this.loadMessage = false;\n        return this.messages;\n    }\n\n    async waitAndMessage (msg, type){\n        const that = this;\n        if(this.loadMessage){\n            const i = setInterval(async() => {\n                if(!that.loadMessage){\n                    clearInterval(i);\n                    await that.sendMessage(msg, type);\n                }\n            }, 500);\n        }else{\n            this.sendMessage(msg);\n        }\n    }\n\n    async sendMessage(msg, type){\n\n        if(!this.messages){\n            this.messages = { chat: []}\n        }\n\n        this.messages.chat[this.messages.chat.length] = {\n            msg: msg,\n            type: type,\n            from: this.from,\n            to: this.to,\n        };\n\n\n        try{\n            await this.client.db.setJSON(this.privateKey, this.topic, this.messages);\n        }catch(error){\n            console.log(error);\n        }\n\n        return this.messages;\n    }\n\n    async getMessage(topic, publicKey = this.publicKey){\n        const { data, revision } = await this.client.db.getJSON(encodeURI(publicKey), topic);\n\n        return data;\n    }\n\n    async loadUser1Messages () {\n        let data = await this.getMessage(this.topic);\n        if(!data){\n            data = {\n                chat: []\n            }\n        }\n        return data.chat;\n    }\n\n    async loadUser2Messages () {\n        let data = await this.getMessage(this.topic, this.publicKey2);\n        if(!data){\n            data = {\n                chat: []\n            }\n        }\n        return data.chat;\n    }\n\n    getMessages() {\n        if(!this.messages){\n            this.messages = {\n                chat: []\n            }\n        }\n        return this.messages;\n    }\n\n}","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/jobActions.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/config/categoryList.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/config/abi/categoryContract.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/config/abi/offerContract.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/actions/orderActions.js",["304","305","306"],"import { genKeyPairFromSeed } from 'skynet-js';\nimport { ORDER_CONTRACT_ABI } from '../config/abi/orderContract';\nimport {CLIENT_LIST_REQUEST , CLIENT_LIST_SUCCESS , CLIENT_LIST_ERROR, ORDER_ACCEPTED, ORDER_REJECTED, ORDER_MESSAGES, ORDER_CANCELLED} from '../constants';\nimport { fetchData } from './categoryActions';\n\n\nfunction makeRandomId(length){\n        var result = [];\n        var characters =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n          result.push(\n            characters.charAt(Math.floor(Math.random() * charactersLength))\n          );\n        }\n        return result.join(\"\");\n}\n\nasync function fetchDataFromHash(contract){\n    let ipfs_hash = await contract.methods.ipfs_hash().call();\n    let status = await contract.methods.order_status().call();\n    let data = await fetchData(ipfs_hash);\n    let statusMessage = ORDER_MESSAGES[status];\n    return {data:data , status:statusMessage}\n}\n\nexport const getOrderDetail =  async (web3 , account , orderContract) =>  {\n    let contract = new web3.eth.Contract(ORDER_CONTRACT_ABI , orderContract);\n    // console.log('Contract' , contract);\n    return await fetchDataFromHash(contract);\n}\n\nexport const updateOrderStatus =  async (web3 , account ,orderContract , status) =>  {  \n    let contract = new web3.eth.Contract(ORDER_CONTRACT_ABI , orderContract);\n    try{\n        if(status === ORDER_ACCEPTED){\n            const serviceProvider = makeRandomId(200);\n            let { publicKey, privateKey } = genKeyPairFromSeed(serviceProvider);\n            await contract.methods.acceptOrder(publicKey , privateKey).send({from:account});\n        }else if (status === ORDER_REJECTED){\n            await contract.methods.rejectOrder().send({from:account});\n        } else if (status === ORDER_CANCELLED){\n                await contract.methods.cancelOrder().send({from:account});\n        }\n        return await fetchDataFromHash(contract)\n    } catch(e){\n        return await fetchDataFromHash(contract);\n    }\n}\n\nexport const getServiceProvider =  async (web3 , account , orderContract) =>  {\n    let contract = new web3.eth.Contract(ORDER_CONTRACT_ABI , orderContract);\n    let data = await contract.methods.getServiceProviderRequirements().call({from: account});\n    return data;\n\n}\n\nexport const getClientProvider = async (web3 , account , orderContract) =>  {\n    let contract = new web3.eth.Contract(ORDER_CONTRACT_ABI , orderContract);\n    let data = await contract.methods.getClientRequirements().call({from: account});\n    return data;\n}\n\nexport const getAddresses = async (web3, orderContract) => {\n    let contract = new web3.eth.Contract(ORDER_CONTRACT_ABI , orderContract);\n    let client = await contract.methods.client().call();\n    let service_provider = await contract.methods.service_provider().call();\n\n    return {\n        client: client,\n        serviceProvider: service_provider\n    }\n}","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/config/abi/orderContract.js",[],"/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/JobList.jsx",["307","308","309"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../../styles/Category.scss\";\nimport { fetchCategories } from \"../../actions/categoryActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { getJobsList } from \"../../actions/jobListActions\";\nimport { connectIfAuthorized } from \"../../actions/commonAction\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport JobCard from \"../common/JobCard\";\nimport { Helmet } from \"react-helmet\";\n\nclass Categories extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getJobs = async (start, list) => {\n    console.log(start);\n    const categoryId = this.props.match.params.id;\n\n    await this.props.getJobsList(\n      this.props.contract,\n      this.props.account,\n      this.props.web3,\n      categoryId,\n      start,\n      list\n    );\n  };\n\n  async componentDidMount() {\n    this.getJobs(null, []);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.getJobs(null, []);\n    }\n  }\n\n  render() {\n    const last_item =\n      this.props.list.length > 0\n        ? this.props.list[this.props.list.length - 1]\n        : {};\n\n    const page_end = this.props.list.length > 0 ? last_item.id : 0;\n    const nextId = this.props.list.length > 0 ? last_item.next : 0;\n\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>List of Jobs</title>\n        </Helmet>\n        <Container className=\"body-padding\">\n          {!this.props.loading && this.props.list ? (\n            <div className=\"row\">\n              <div className=\"col-md-12 parent-cateogory-title text-center\">\n                <h1>{this.props.categoryNane}</h1>\n              </div>\n              <div className=\"row col-md-12 categories-section\">\n                <div className=\"col-md-12\">\n                  <Row className=\"collections\">\n                    {this.props.list &&\n                      this.props.list.map((hash, i) => {\n                        return (\n                          hash.ipfs_hash != \"\" &&\n                          hash.ipfs_hash != \"abhbi\" && (\n                            <Col key={i} xs={12} sm={6} md={4} lg={3}>\n                              <JobCard\n                                index={i}\n                                hash={hash}\n                                offerContract={this.props.match.params.id}\n                              ></JobCard>\n                            </Col>\n                          )\n                        );\n                      })}\n                  </Row>\n\n                  <div className=\"text-center\">\n                    {Number(this.props.end) > Number(page_end) && (\n                      <div\n                        className=\"btn btn-primary\"\n                        onClick={() => this.getJobs(nextId, this.props.list)}\n                      >\n                        Load More\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </div>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { web3, account, contract } = state.common;\n  const { list, start, end, loading, error, categoryNane } = state.jobList;\n  return {\n    categories: state.category.categoryItems,\n    web3,\n    account,\n    loading,\n    error,\n    contract,\n    list,\n    start,\n    end,\n    categoryNane,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchCategories: (id) => dispatch(fetchCategories(id)),\n    connectIfAuthorized: () => dispatch(connectIfAuthorized()),\n    getJobsList: (contract, account, web3, offerContract, start, jlist) =>\n      dispatch(\n        getJobsList(contract, account, web3, offerContract, start, jlist)\n      ),\n  };\n}\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Categories)\n);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/CategoryList.jsx",["310"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../../styles/Category.scss\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { getCategoriesList } from \"../../actions/categoryListAction\";\nimport { Container } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet\";\n\nclass Category extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n    if (this.props.contract) {\n      await this.props.getCategoriesList(\n        this.props.contract,\n        this.props.account\n      );\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Category Listing</title>\n        </Helmet>\n        <Container className=\"body-padding\">\n          <div>\n            {this.props.categoryList && this.props.categoryList.length > 0 ? (\n              <>\n                <ul className=\"category-items\">\n                  {this.props.categoryList.map((value, index) => {\n                    return (\n                      <li key={index}>\n                        <Link to={\"/list/\" + value.offer_contract}>\n                          <span>{value.name}</span>\n                        </Link>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </>\n            ) : (\n              <div>No Items found</div>\n            )}\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { web3, account, loading, error, contract } = state.common;\n  const { categoryList } = state.categoryList;\n  return {\n    jobCategory: state.fetchJobs.categoryJob,\n    web3,\n    account,\n    loading,\n    error,\n    contract,\n    categoryList,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getCategoriesList: (contract, account) =>\n      dispatch(getCategoriesList(contract, account)),\n  };\n}\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Category)\n);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/pages/CustomerJobList.jsx",["311","312","313","314"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchCustomerData } from \"../../actions/commonAction\";\nimport { withRouter } from \"react-router-dom\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport { getUserGigs } from \"../../actions/jobActions\";\nimport JobCard from \"../common/JobCard\";\nimport { Helmet } from \"react-helmet\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass Customer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gigData: [],\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.web3) {\n      await this.start();\n    }\n  }\n\n  async componentDidUpdate(props, state) {\n    if (this.props.web3 != props.web3) {\n      await this.start();\n    }\n  }\n\n  start = async () => {\n    const customerId = this.props.match.params.customerId;\n\n    let data = await getUserGigs(\n      this.props.contract,\n      customerId,\n      this.props.web3\n    );\n    this.setState({ gigData: data, userAccount: customerId, loading: false });\n    console.log(\"Gig\", this.state.gigData);\n  };\n\n  render() {\n    return (\n      <div className=\"customer-list\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>User Job List</title>\n        </Helmet>\n        {!this.state.loading ? <Container style={{ paddingTop: \"13rem\" }}>\n          <Row>\n            <Col md={3} lg={3} sm={12} xs={12}>\n              <Row className=\"top-profile-section\">\n                <Col md={12} sm={12} lg={12} xs={12}>\n                  <div className=\"profile-section\">\n                    <div className=\"user-image\">\n                      <img\n                        src=\"https://t3.ftcdn.net/jpg/01/83/55/76/360_F_183557656_DRcvOesmfDl5BIyhPKrcWANFKy2964i9.jpg\"\n                        alt=\"user-image\"\n                      />\n                    </div>\n                    <h5>{this.state.userAccount}</h5>\n                  </div>\n                </Col>\n              </Row>\n            </Col>\n            <Col lg={9} md={9} sm={12} xs={12} className=\"collections-seller\">\n              <h1>User Gigs</h1>\n              <Row className=\"collections\">\n                {this.state.gigData &&\n                  this.state.gigData.length > 0 &&\n                  this.state.gigData.map((job, i) => {\n                    return (\n                      job.ipfs_hash && <Col\n                        key={i}\n                        xs={12}\n                        sm={6}\n                        md={6}\n                        lg={4}\n                        className=\"collections-seller-columns\"\n                      >\n                        <JobCard\n                          index={i}\n                          hash={job}\n                          offerContract={job.offerContract}\n                          column=\"3\"\n                        ></JobCard>\n                      </Col>\n                    );\n                  })}\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n        :\n        <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n        }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log(state.common);\n  const { web3, accountConnection, account, contract } = state.common;\n  return {\n    web3,\n    account,\n    contract,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Customer));\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/CardList.jsx",["315","316","317","318"],"import React, { Component } from \"react\";\nimport { Row, Col, Badge } from \"react-bootstrap\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport JobCard from \"./common/JobCard\";\n\nclass NewCollection extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  viewAllItems = () => {\n    this.props.history.push(`/list/${this.props.categoryContract}`);\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"collections-content\" style={{ width: \"100%\" }}>\n          <div className=\"float-right link\">\n            <Link to={\"/list/\" + this.props.categoryContract}>\n              View All <i class=\"arrow right\"></i>\n            </Link>\n          </div>\n          <h2 className=\"collection-title\">{this.props.categoryName}</h2>\n          <Row className=\"collections\">\n            {this.props.list ? (\n              this.props.list.map((hash, i) => {\n                return (\n                  i <= 3 &&\n                  hash.ipfs_hash != \"\" &&\n                  hash.ipfs_hash != \"abhbi\" && (\n                    <Col key={i} xs={12} sm={6} md={4} lg={3}>\n                      <JobCard\n                        index={i}\n                        hash={hash}\n                        offerContract={this.props.categoryContract}\n                        column=\"3\"\n                      ></JobCard>\n                    </Col>\n                  )\n                );\n              })\n            ) : (\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            )}\n          </Row>\n          {/* <div className=\"button-center-container\">\n            {this.props.list && this.props.list.length > 4 && (\n              <button className=\"btn btn-secondary\" onClick={this.viewAllItems}>\n                View All\n              </button>\n            )}\n          </div> */}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(NewCollection);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/common/JobCard.jsx",["319"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchData } from \"../../actions/categoryActions\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport { getJobDetail } from \"../../actions/jobActions\";\n\nclass JobCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hashedData: {},\n    };\n  }\n\n  async componentDidMount() {\n    let jobData = await fetchData(this.props.hash.ipfs_hash);\n    this.setState({ hashedData: jobData });\n  }\n\n  render() {\n    const isLoaded = this.state.hashedData && this.state.hashedData.imageHash;\n    return (\n      <>\n        {\n          <>\n            <div className=\"card\">\n              {isLoaded ? (\n                <Link\n                  to={\n                    \"/list/\" +\n                    this.props.hash.id +\n                    \"/\" +\n                    this.props.offerContract\n                  }\n                  className=\"card-img-top\"\n                >\n                  <img\n                    src={`https://ipfs.io/ipfs/${this.state.hashedData.imageHash[0]}`}\n                    alt=\"Card image\"\n                  />\n\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      {this.state.hashedData.title}\n                    </h5>\n                    <div className=\"card-bottom\">\n                      <span className=\"bottom-left\">\n                        {this.state.hashedData.parentCategory}\n                      </span>\n                      <br />\n                      <span className=\"price-tag\">\n                        {this.state.hashedData.price} Dai\n                      </span>\n                    </div>\n                  </div>\n                </Link>\n              ) : (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </Spinner>\n                </div>\n              )}\n            </div>\n          </>\n        }\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getJobDetail: (web3, id, offerContract) =>\n      dispatch(getJobDetail(web3, id, offerContract)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobCard);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/common/Footer.jsx",["320","321","322","323","324","325","326","327","328","329","330","331","332"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Web3 from \"web3\";\nimport { Row, Col, Badge } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    // this.props.fetchParentCategories();\n  }\n\n  async connectWithMetaMask() {\n    // if (window.web3 !== undefined) {\n    //   if (window.ethereum) {\n    //     const web3 = new Web3(window.ethereum);\n    //     try {\n    //       await window.ethereum.enable();\n    //       var accounts = await web3.eth.getAccounts();\n    //       var firstAcc = accounts[0];\n    //       this.setState({ active: true });\n    //     } catch (e) {\n    //       console.error(e);\n    //     }\n    //   }\n    // }\n  }\n\n  onClick() {\n    // this.connectWithMetaMask();\n  }\n\n  render() {\n    return (\n      <>\n        <Col md={12} sm={12} className=\"footer-outer\">\n          <Container className=\"footer-top-section\">\n            <Row className=\"Footer\">\n              <Col md={3} sm={12} className=\"text-center\">\n                <img src=\"/assets/img/white.png\" className=\"foot-img\" alt=\"\" />\n                <h3>Pentonium</h3>\n                <br />\n              </Col>\n              <Col md={3} sm={6} xs={6}>\n                <h6>Support</h6>\n                <ul>\n                  <li>\n                    <a\n                      href=\"https://docs.pentonium.com/contact-us/customer-support\"\n                      target=\"_blank\"\n                    >\n                      Help & Support\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href=\"https://docs.pentonium.com/general/marshal\"\n                      target=\"_blank\"\n                    >\n                      Marshal\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href=\"https://docs.pentonium.com/general/service-provider\"\n                      target=\"_blank\"\n                    >\n                      Service Provider\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href=\"https://docs.pentonium.com/general/client\"\n                      target=\"_blank\"\n                    >\n                      Client\n                    </a>\n                  </li>\n                </ul>\n                <br />\n              </Col>\n              <Col md={3} sm={6} xs={6}>\n                <h6>Community</h6>\n                <ul>\n                  <li>\n                    <a href=\"https://t.me/pentonium\" target=\"_blank\">\n                      Telegram\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"https://pentonium.medium.com/\" target=\"_blank\">\n                      Blog\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"https://github.com/pentonium\" target=\"_blank\">\n                      Github\n                    </a>\n                  </li>\n                </ul>\n                <br />\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                <div className=\"text-center\">\n                  <a\n                    href=\"https://t.me/pentonium\"\n                    target=\"_blank\"\n                    className=\"f-social\"\n                  >\n                    <img\n                      src=\"https://pentonium.com/assets/img/social/telegram.png\"\n                      alt=\"\"\n                    />\n                  </a>\n                  <a\n                    href=\"https://pentonium.medium.com/\"\n                    target=\"_blank\"\n                    className=\"f-social\"\n                  >\n                    <img\n                      src=\"https://pentonium.com/assets/img/social/medium.png\"\n                      alt=\"\"\n                    />\n                  </a>\n                  <a\n                    href=\"https://github.com/pentonium\"\n                    target=\"_blank\"\n                    className=\"f-social\"\n                  >\n                    <img\n                      src=\"https://pentonium.com/assets/img/social/github.png\"\n                      alt=\"\"\n                    />\n                  </a>\n                </div>\n\n                <br />\n                <br />\n                <br />\n              </Col>\n            </Row>\n          </Container>\n        </Col>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    parentCategories: state.common.parentCategories,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/common/Header.jsx",["333","334"],"import React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { connectWallet, connectIfAuthorized } from \"../../actions/commonAction\";\nimport {\n  fetchCategories,\n  createNewCategory,\n} from \"../../actions/categoryActions\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport { getJobsList } from \"../../actions/jobListActions\";\nimport { getCategoriesList } from \"../../actions/categoryListAction\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { CATEGORY_LIST } from \"../../config/categoryList\";\n\nclass Header extends Component {\n  state = {\n    showSub: true,\n    showCategories: false,\n  };\n\n  componentDidMount() {\n    if (this.props.onScroll) {\n      this.setState({\n        showSub: false,\n      });\n      window.addEventListener(\"scroll\", this.showBar);\n    }\n  }\n\n  showBar = () => {\n    if (window.pageYOffset > 140 && !this.state.showSub) {\n      this.setState({\n        showSub: true,\n      });\n    } else if (window.pageYOffset < 140 && this.state.showSub) {\n      this.setState({\n        showSub: false,\n      });\n    }\n  };\n\n  showCategories = () => {\n    this.setState({ showCategories: !this.state.showCategories });\n  };\n\n  connectToMetaMask = async () => {\n    await this.props.connectWallet();\n  };\n\n  render() {\n    return (\n      <>\n        <header className={\"header \" + (!this.state.showSub && \"\")}>\n          <div className=\"header-core\">\n            <div className=\"container\">\n              <div className=\"nav-section\">\n                <ul className=\"nav-items\">\n                  <li key=\"inr\" className=\"nav-item\">\n                    <Link to=\"/post-job\" className=\"btn btn-secondary post-btn\">\n                      Post\n                    </Link>\n                  </li>\n                  <li key=\"connect\" className=\"nav-item\">\n                    {this.props.account ? (\n                      <div className=\"logo-section\">\n                        <Dropdown className=\"logged-in-user-menus\">\n                          <Dropdown.Toggle menualign={\"left\"}>\n                            <img\n                              className=\"profile-dropdown\"\n                              src=\"https://innsida.ntnu.no/documents/10157/2548972475/user-profile-empty.png\"\n                              alt=\"\"\n                            />\n                          </Dropdown.Toggle>\n                          <Dropdown.Menu>\n                            <Link to=\"/order/buyer\" className=\"dropdown-item\">\n                              Buyer\n                            </Link>\n                            <Link to=\"/order/seller\" className=\"dropdown-item\">\n                              Seller\n                            </Link>\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </div>\n                    ) : (\n                      <button\n                        className=\"btn btn-primary connect-btn\"\n                        onClick={this.connectToMetaMask}\n                      >\n                        Connect\n                      </button>\n                    )}\n                  </li>\n                </ul>\n              </div>\n              <div className=\"logo-section\">\n                <Link to=\"/\">\n                  <img src=\"/assets/img/logo.png\" alt=\"\" />\n                  {/* Pentonium */}\n                </Link>\n              </div>\n            </div>\n          </div>\n          {this.state.showSub && CATEGORY_LIST ? (\n            <div className=\"parent-nav-section\">\n              <div className=\"container\">\n                <div className=\"btn menu\" onClick={this.showCategories}>\n                  Categories <i class=\"arrow down\"></i>\n                </div>\n                <ul\n                  className={\n                    \"nav-items nav-category-list \" +\n                    (this.state.showCategories && \"active\")\n                  }\n                >\n                  {CATEGORY_LIST.map((value, index) => {\n                    return (\n                      <li key={index} className=\"li-nav-item\">\n                        <Link to={`/list/${value.address}`}>\n                          <span>{value.name}</span>\n                        </Link>\n                      </li>\n                    );\n                  })}\n                  <li className=\"li-nav-item\">\n                    <Link aria-controls={\"view-all\"} to={\"/categories\"}>\n                      <span>View All</span>\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </header>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { web3, account, loading, error, contract } = state.common;\n  const { list } = state.jobList;\n  const { categoryList } = state.categoryList;\n  return {\n    parentCategories: state.common.parentCategories,\n    categories: state.category.categoryItems,\n    web3,\n    account,\n    loading,\n    error,\n    contract,\n    list,\n    categoryList,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchCategories: (id) => dispatch(fetchCategories(id)),\n    connectWallet: () => dispatch(connectWallet()),\n    connectIfAuthorized: () => dispatch(connectIfAuthorized()),\n    getJobsList: (contract, account, web3, offerContract) =>\n      dispatch(getJobsList(contract, account, web3, offerContract)),\n    getCategoriesList: (contract, account) =>\n      dispatch(getCategoriesList(contract, account)),\n    createNewCategory: (name, account, contract) =>\n      dispatch(createNewCategory(name, account, contract)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/OrderItemList.jsx",["335","336","337","338"],"import React, { Component } from \"react\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { getOrderDetail, updateOrderStatus } from \"../actions/orderActions\";\nimport {\n  BUYER,\n  ORDER_ACCEPTED,\n  ORDER_CANCELLED,\n  ORDER_CREATED,\n  ORDER_MESSAGES,\n  ORDER_REJECTED,\n} from \"../constants\";\n\nclass OrderItemList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderData: {},\n      loading: true,\n      buttonLoader: false,\n    };\n  }\n\n  async componentDidMount() {\n    let data = await getOrderDetail(\n      this.props.web3,\n      this.props.account,\n      this.props.orderContract\n    );\n    this.setState({ orderData: data, loading: false });\n  }\n\n  acceptOrder = async () => {\n    this.setState({ buttonLoader: true });\n    let data = await updateOrderStatus(\n      this.props.web3,\n      this.props.account,\n      this.props.orderContract,\n      ORDER_ACCEPTED\n    );\n    this.setState({ orderData: data, loading: false, buttonLoader: false });\n  };\n\n  rejectOrder = async () => {\n    this.setState({ buttonLoader: true });\n    let data = await updateOrderStatus(\n      this.props.web3,\n      this.props.account,\n      this.props.orderContract,\n      ORDER_REJECTED\n    );\n    this.setState({ orderData: data, loading: false, buttonLoader: false });\n  };\n\n  cancelOrder = async () => {\n    this.setState({ buttonLoader: true });\n    let data = await updateOrderStatus(\n      this.props.web3,\n      this.props.account,\n      this.props.orderContract,\n      ORDER_CANCELLED\n    );\n    this.setState({ orderData: data, loading: false, buttonLoader: false });\n  };\n\n  navigateToChatPage = () => {\n    if (this.state.orderData.status == ORDER_MESSAGES[ORDER_ACCEPTED]) {\n      this.props.history.push(\n        `/chatpage/${this.props.type}/${this.props.orderContract}`\n      );\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.orderData && !this.state.loading ? (\n          <Col md={12} xs={12} onClick={this.navigateToChatPage}>\n            <Row className=\"order-item-row\">\n              <Col md={2} sm={2}>\n                <div className=\"img-col\">\n                  <img\n                    className=\"list-image\"\n                    src={`https://ipfs.io/ipfs/${this.state.orderData.data.imageHash[0]}`}\n                    alt=\"Card image\"\n                  />\n                </div>\n              </Col>\n              <Col md={8} sm={8}>\n                <Row>\n                  <Col md={6} sm={6}>\n                    <p className=\"order-item-title\">\n                      {this.state.orderData.data.title}\n                    </p>\n                    <p className=\"order-item-text\">\n                      {this.state.orderData.data.description}\n                    </p>\n                  </Col>\n                  <Col md={3}>\n                    <p className=\"order-item-title\">\n                      {this.state.orderData.data.duration} days\n                    </p>\n                    <p className=\"order-item-text\">Duration</p>\n                  </Col>\n                  <Col md={3}>\n                    {this.state.orderData.status ==\n                    ORDER_MESSAGES[ORDER_CREATED] ? (\n                      this.props.type == BUYER ? (\n                        <>\n                          <Button\n                            variant=\"secondary\"\n                            size=\"sm\"\n                            onClick={this.cancelOrder}\n                            disabled={this.state.buttonLoader}\n                          >\n                            {this.state.buttonLoader ? \"Loading…\" : \"Cancel\"}\n                          </Button>\n                        </>\n                      ) : (\n                        <>\n                          <Button\n                            variant=\"primary\"\n                            size=\"sm\"\n                            onClick={this.acceptOrder}\n                            block\n                            disabled={this.state.buttonLoader}\n                          >\n                            {this.state.buttonLoader ? \"Loading…\" : \"Accept\"}\n                          </Button>\n                          <Button\n                            variant=\"secondary\"\n                            size=\"sm\"\n                            onClick={this.rejectOrder}\n                            block\n                            disabled={this.state.buttonLoader}\n                          >\n                            {this.state.buttonLoader ? \"Loading…\" : \"Reject\"}\n                          </Button>\n                        </>\n                      )\n                    ) : (\n                      <>\n                        <p className=\"order-item-title\">\n                          {this.state.orderData.status}\n                        </p>\n                        <p className=\"order-item-text\">Current Status</p>\n                      </>\n                    )}\n                  </Col>\n                </Row>\n              </Col>\n              <Col md={2} sm={2}>\n                <p className=\"order-item-price\">\n                  {this.state.orderData.data.price} DAI\n                </p>\n                {/* <p className=\"order-subtext\">DAI</p> */}\n              </Col>\n            </Row>\n          </Col>\n        ) : (\n          <Col sm={12}>\n            <div className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </div>\n          </Col>\n        )}\n      </>\n    );\n  }\n}\n\nexport default OrderItemList;\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/UserPriceDetail.jsx",["339"],"import Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Button from \"react-bootstrap/Button\";\n\nexport const UserPriceDetail = (props) => {\n  return (\n    <>\n      <Tabs defaultActiveKey=\"basic\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"basic\" title={null}>\n          {/* <Sonnet /> */}\n          <div className=\"tab-content-header\">\n            <h5 className=\"title\">\n              <i className=\"fa fa-clock-o\"></i>&nbsp;{props.data.duration} Days\n              Delivery\n            </h5>\n            <span className=\"price\">{props.data.price} Dai</span>\n            <p className=\"short-desc\">\n              <span>{props.data.package}</span>\n            </p>\n          </div>\n          <div className=\"tab-content-body\">\n            <ul className=\"user-feature\">\n              {props.data.features &&\n                props.data.features.length > 0 &&\n                props.data.features.map((feat, index) => {\n                  return <li key={index}>{feat}</li>;\n                })}\n            </ul>\n            <br />\n            <Button\n              variant=\"primary\"\n              disabled={props.loader}\n              size=\"md\"\n              onClick={props.placeOrderHandler}\n              block\n            >\n              {props.loader ? \"Loading…\" : \"Place Order\"}\n            </Button>\n          </div>\n        </Tab>\n      </Tabs>\n      {props.account == props.provider && (\n        <div className=\"description-action-buttons\">\n          <Button\n            onClick={props.navigateToUpdate}\n            disabled={props.loader}\n            variant=\"secondary\"\n            size=\"sm\"\n            block\n          >\n            {props.loader ? \"Loading…\" : \"Edit Job\"}\n          </Button>\n          <Button\n            className=\"delete-job\"\n            disabled={props.loader}\n            onClick={props.deleteHandler}\n            variant=\"primary\"\n            size=\"sm\"\n            block\n          >\n            {props.loader ? \"Loading…\" : \"Delete Job\"}\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n","/Users/coolatmusic/Documents/Practice/smart-contract/pentonium/webapp/src/components/modals/NewCategoryModal.jsx",[],{"ruleId":"340","severity":1,"message":"341","line":2,"column":27,"nodeType":"342","messageId":"343","endLine":2,"endColumn":33},{"ruleId":"340","severity":1,"message":"344","line":2,"column":42,"nodeType":"342","messageId":"343","endLine":2,"endColumn":46},{"ruleId":"345","severity":1,"message":"346","line":32,"column":24,"nodeType":"347","messageId":"348","endLine":32,"endColumn":26},{"ruleId":"345","severity":1,"message":"346","line":35,"column":25,"nodeType":"347","messageId":"348","endLine":35,"endColumn":27},{"ruleId":"345","severity":1,"message":"349","line":48,"column":12,"nodeType":"347","messageId":"348","endLine":48,"endColumn":14},{"ruleId":"340","severity":1,"message":"350","line":68,"column":7,"nodeType":"342","messageId":"343","endLine":68,"endColumn":12},{"ruleId":"351","severity":1,"message":"352","line":9,"column":1,"nodeType":"353","endLine":14,"endColumn":2},{"ruleId":"340","severity":1,"message":"341","line":3,"column":20,"nodeType":"342","messageId":"343","endLine":3,"endColumn":26},{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"340","severity":1,"message":"341","line":3,"column":20,"nodeType":"342","messageId":"343","endLine":3,"endColumn":26},{"ruleId":"345","severity":1,"message":"349","line":28,"column":35,"nodeType":"347","messageId":"348","endLine":28,"endColumn":37},{"ruleId":"340","severity":1,"message":"341","line":2,"column":27,"nodeType":"342","messageId":"343","endLine":2,"endColumn":33},{"ruleId":"340","severity":1,"message":"344","line":2,"column":42,"nodeType":"342","messageId":"343","endLine":2,"endColumn":46},{"ruleId":"345","severity":1,"message":"346","line":32,"column":24,"nodeType":"347","messageId":"348","endLine":32,"endColumn":26},{"ruleId":"345","severity":1,"message":"346","line":35,"column":25,"nodeType":"347","messageId":"348","endLine":35,"endColumn":27},{"ruleId":"345","severity":1,"message":"349","line":48,"column":12,"nodeType":"347","messageId":"348","endLine":48,"endColumn":14},{"ruleId":"340","severity":1,"message":"350","line":68,"column":7,"nodeType":"342","messageId":"343","endLine":68,"endColumn":12},{"ruleId":"351","severity":1,"message":"352","line":14,"column":1,"nodeType":"353","endLine":73,"endColumn":2},{"ruleId":"345","severity":1,"message":"346","line":35,"column":34,"nodeType":"347","messageId":"348","endLine":35,"endColumn":36},{"ruleId":"351","severity":1,"message":"352","line":8,"column":1,"nodeType":"353","endLine":38,"endColumn":2},{"ruleId":"340","severity":1,"message":"358","line":3,"column":8,"nodeType":"342","messageId":"343","endLine":3,"endColumn":12},{"ruleId":"351","severity":1,"message":"352","line":15,"column":1,"nodeType":"353","endLine":66,"endColumn":2},{"ruleId":"345","severity":1,"message":"346","line":60,"column":37,"nodeType":"347","messageId":"348","endLine":60,"endColumn":39},{"ruleId":"340","severity":1,"message":"359","line":19,"column":8,"nodeType":"342","messageId":"343","endLine":19,"endColumn":15},{"ruleId":"360","severity":1,"message":"361","line":150,"column":65,"nodeType":"362","messageId":"363","endLine":150,"endColumn":67},{"ruleId":"345","severity":1,"message":"346","line":162,"column":13,"nodeType":"347","messageId":"348","endLine":162,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":188,"column":14,"nodeType":"347","messageId":"348","endLine":188,"endColumn":16},{"ruleId":"364","severity":1,"message":"365","line":428,"column":25,"nodeType":"366","endLine":428,"endColumn":54},{"ruleId":"345","severity":1,"message":"346","line":158,"column":13,"nodeType":"347","messageId":"348","endLine":158,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":203,"column":14,"nodeType":"347","messageId":"348","endLine":203,"endColumn":16},{"ruleId":"367","severity":1,"message":"368","line":94,"column":19,"nodeType":"369","endLine":94,"endColumn":22},{"ruleId":"370","severity":1,"message":"371","line":96,"column":23,"nodeType":"369","endLine":96,"endColumn":126},{"ruleId":"372","severity":1,"message":"373","line":117,"column":31,"nodeType":"369","endLine":120,"endColumn":33},{"ruleId":"370","severity":1,"message":"371","line":125,"column":21,"nodeType":"369","endLine":125,"endColumn":62},{"ruleId":"340","severity":1,"message":"374","line":5,"column":31,"nodeType":"342","messageId":"343","endLine":5,"endColumn":44},{"ruleId":"375","severity":1,"message":"376","line":12,"column":3,"nodeType":"377","messageId":"378","endLine":14,"endColumn":4},{"ruleId":"340","severity":1,"message":"379","line":1,"column":9,"nodeType":"342","messageId":"343","endLine":1,"endColumn":32},{"ruleId":"340","severity":1,"message":"380","line":1,"column":104,"nodeType":"342","messageId":"343","endLine":1,"endColumn":123},{"ruleId":"345","severity":1,"message":"349","line":22,"column":24,"nodeType":"347","messageId":"348","endLine":22,"endColumn":26},{"ruleId":"345","severity":1,"message":"349","line":77,"column":24,"nodeType":"347","messageId":"348","endLine":77,"endColumn":26},{"ruleId":"381","severity":1,"message":"382","line":119,"column":32,"nodeType":"383","messageId":"384","endLine":119,"endColumn":52},{"ruleId":"381","severity":1,"message":"382","line":123,"column":32,"nodeType":"383","messageId":"384","endLine":123,"endColumn":52},{"ruleId":"340","severity":1,"message":"385","line":1,"column":105,"nodeType":"342","messageId":"343","endLine":1,"endColumn":124},{"ruleId":"340","severity":1,"message":"386","line":4,"column":20,"nodeType":"342","messageId":"343","endLine":4,"endColumn":25},{"ruleId":"340","severity":1,"message":"387","line":6,"column":17,"nodeType":"342","messageId":"343","endLine":6,"endColumn":23},{"ruleId":"345","severity":1,"message":"349","line":37,"column":38,"nodeType":"347","messageId":"348","endLine":37,"endColumn":40},{"ruleId":"345","severity":1,"message":"349","line":113,"column":20,"nodeType":"347","messageId":"348","endLine":113,"endColumn":22},{"ruleId":"345","severity":1,"message":"349","line":121,"column":33,"nodeType":"347","messageId":"348","endLine":121,"endColumn":35},{"ruleId":"345","severity":1,"message":"349","line":141,"column":26,"nodeType":"347","messageId":"348","endLine":141,"endColumn":28},{"ruleId":"345","severity":1,"message":"346","line":212,"column":40,"nodeType":"347","messageId":"348","endLine":212,"endColumn":42},{"ruleId":"351","severity":1,"message":"352","line":9,"column":1,"nodeType":"353","endLine":33,"endColumn":4},{"ruleId":"351","severity":1,"message":"352","line":9,"column":1,"nodeType":"353","endLine":101,"endColumn":4},{"ruleId":"351","severity":1,"message":"352","line":11,"column":1,"nodeType":"353","endLine":79,"endColumn":4},{"ruleId":"340","severity":1,"message":"386","line":5,"column":20,"nodeType":"342","messageId":"343","endLine":5,"endColumn":25},{"ruleId":"345","severity":1,"message":"349","line":34,"column":35,"nodeType":"347","messageId":"348","endLine":34,"endColumn":37},{"ruleId":"345","severity":1,"message":"346","line":48,"column":18,"nodeType":"347","messageId":"348","endLine":48,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":54,"column":25,"nodeType":"347","messageId":"348","endLine":54,"endColumn":27},{"ruleId":"345","severity":1,"message":"346","line":99,"column":45,"nodeType":"347","messageId":"348","endLine":99,"endColumn":47},{"ruleId":"388","severity":1,"message":"389","line":103,"column":28,"nodeType":"390","messageId":"391","endLine":103,"endColumn":48},{"ruleId":"345","severity":1,"message":"346","line":142,"column":34,"nodeType":"347","messageId":"348","endLine":142,"endColumn":36},{"ruleId":"345","severity":1,"message":"349","line":22,"column":77,"nodeType":"347","messageId":"348","endLine":22,"endColumn":79},{"ruleId":"345","severity":1,"message":"349","line":41,"column":104,"nodeType":"347","messageId":"348","endLine":41,"endColumn":106},{"ruleId":"340","severity":1,"message":"392","line":1,"column":24,"nodeType":"342","messageId":"343","endLine":1,"endColumn":42},{"ruleId":"340","severity":1,"message":"393","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":15},{"ruleId":"340","severity":1,"message":"387","line":2,"column":17,"nodeType":"342","messageId":"343","endLine":2,"endColumn":23},{"ruleId":"345","severity":1,"message":"349","line":32,"column":44,"nodeType":"347","messageId":"348","endLine":32,"endColumn":46},{"ruleId":"345","severity":1,"message":"349","line":42,"column":37,"nodeType":"347","messageId":"348","endLine":42,"endColumn":39},{"ruleId":"345","severity":1,"message":"349","line":42,"column":66,"nodeType":"347","messageId":"348","endLine":42,"endColumn":68},{"ruleId":"345","severity":1,"message":"349","line":57,"column":35,"nodeType":"347","messageId":"348","endLine":57,"endColumn":37},{"ruleId":"340","severity":1,"message":"394","line":104,"column":23,"nodeType":"342","messageId":"343","endLine":104,"endColumn":31},{"ruleId":"340","severity":1,"message":"395","line":3,"column":9,"nodeType":"342","messageId":"343","endLine":3,"endColumn":28},{"ruleId":"340","severity":1,"message":"396","line":3,"column":31,"nodeType":"342","messageId":"343","endLine":3,"endColumn":50},{"ruleId":"340","severity":1,"message":"397","line":3,"column":53,"nodeType":"342","messageId":"343","endLine":3,"endColumn":70},{"ruleId":"375","severity":1,"message":"376","line":14,"column":3,"nodeType":"377","messageId":"378","endLine":16,"endColumn":4},{"ruleId":"345","severity":1,"message":"349","line":69,"column":42,"nodeType":"347","messageId":"348","endLine":69,"endColumn":44},{"ruleId":"345","severity":1,"message":"349","line":70,"column":42,"nodeType":"347","messageId":"348","endLine":70,"endColumn":44},{"ruleId":"375","severity":1,"message":"376","line":10,"column":3,"nodeType":"377","messageId":"378","endLine":12,"endColumn":4},{"ruleId":"340","severity":1,"message":"398","line":3,"column":10,"nodeType":"342","messageId":"343","endLine":3,"endColumn":27},{"ruleId":"345","severity":1,"message":"349","line":27,"column":25,"nodeType":"347","messageId":"348","endLine":27,"endColumn":27},{"ruleId":"372","severity":1,"message":"373","line":58,"column":23,"nodeType":"369","endLine":61,"endColumn":25},{"ruleId":"340","severity":1,"message":"399","line":108,"column":17,"nodeType":"342","messageId":"343","endLine":108,"endColumn":34},{"ruleId":"340","severity":1,"message":"386","line":2,"column":20,"nodeType":"342","messageId":"343","endLine":2,"endColumn":25},{"ruleId":"375","severity":1,"message":"376","line":8,"column":3,"nodeType":"377","messageId":"378","endLine":10,"endColumn":4},{"ruleId":"345","severity":1,"message":"349","line":31,"column":34,"nodeType":"347","messageId":"348","endLine":31,"endColumn":36},{"ruleId":"345","severity":1,"message":"349","line":32,"column":34,"nodeType":"347","messageId":"348","endLine":32,"endColumn":36},{"ruleId":"372","severity":1,"message":"373","line":38,"column":19,"nodeType":"369","endLine":41,"endColumn":21},{"ruleId":"340","severity":1,"message":"400","line":3,"column":8,"nodeType":"342","messageId":"343","endLine":3,"endColumn":12},{"ruleId":"340","severity":1,"message":"386","line":4,"column":20,"nodeType":"342","messageId":"343","endLine":4,"endColumn":25},{"ruleId":"375","severity":1,"message":"376","line":8,"column":3,"nodeType":"377","messageId":"378","endLine":10,"endColumn":4},{"ruleId":"401","severity":1,"message":"402","line":53,"column":23,"nodeType":"366","endLine":53,"endColumn":38},{"ruleId":"401","severity":1,"message":"402","line":61,"column":23,"nodeType":"366","endLine":61,"endColumn":38},{"ruleId":"401","severity":1,"message":"402","line":69,"column":23,"nodeType":"366","endLine":69,"endColumn":38},{"ruleId":"401","severity":1,"message":"402","line":77,"column":23,"nodeType":"366","endLine":77,"endColumn":38},{"ruleId":"401","severity":1,"message":"402","line":89,"column":54,"nodeType":"366","endLine":89,"endColumn":69},{"ruleId":"401","severity":1,"message":"402","line":94,"column":61,"nodeType":"366","endLine":94,"endColumn":76},{"ruleId":"401","severity":1,"message":"402","line":99,"column":60,"nodeType":"366","endLine":99,"endColumn":75},{"ruleId":"401","severity":1,"message":"402","line":110,"column":21,"nodeType":"366","endLine":110,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":120,"column":21,"nodeType":"366","endLine":120,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":130,"column":21,"nodeType":"366","endLine":130,"endColumn":36},{"ruleId":"340","severity":1,"message":"403","line":1,"column":28,"nodeType":"342","messageId":"343","endLine":1,"endColumn":37},{"ruleId":"340","severity":1,"message":"404","line":9,"column":8,"nodeType":"342","messageId":"343","endLine":9,"endColumn":16},{"ruleId":"345","severity":1,"message":"346","line":67,"column":37,"nodeType":"347","messageId":"348","endLine":67,"endColumn":39},{"ruleId":"372","severity":1,"message":"373","line":82,"column":19,"nodeType":"369","endLine":86,"endColumn":21},{"ruleId":"345","severity":1,"message":"346","line":106,"column":50,"nodeType":"347","messageId":"348","endLine":106,"endColumn":52},{"ruleId":"345","severity":1,"message":"346","line":108,"column":39,"nodeType":"347","messageId":"348","endLine":108,"endColumn":41},{"ruleId":"345","severity":1,"message":"346","line":42,"column":22,"nodeType":"347","messageId":"348","endLine":42,"endColumn":24},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'parts' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-native-reassign",["405"],"no-negated-in-lhs",["406"],"'ipfs' is defined but never used.","'Spinner' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'connectWallet' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FETCH_PARENT_CATEGORIES' is defined but never used.","'FETCH_CUSTOMER_DATA' is defined but never used.","no-self-assign","'window.location.href' is assigned to itself.","MemberExpression","selfAssignment","'FETCH_HASH_JOB_DATA' is defined but never used.","'Badge' is defined but never used.","'SELLER' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'genKeyPairFromSeed' is defined but never used.","'BUYER' is defined but never used.","'revision' is assigned a value but never used.","'CLIENT_LIST_REQUEST' is defined but never used.","'CLIENT_LIST_SUCCESS' is defined but never used.","'CLIENT_LIST_ERROR' is defined but never used.","'fetchCustomerData' is defined but never used.","'accountConnection' is assigned a value but never used.","'Web3' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'createRef' is defined but never used.","'Collapse' is defined but never used.","no-global-assign","no-unsafe-negation"]